JG Visagie31594883A.I. Assignment 4Table of contentsList of figuresNeural Network trainingArtificial Neural Networks (ANN) are a collection of algorithms that are intended to recognise patterns and are loosely based on the human brain. They categorise or group raw input to comprehend sensory data using a form of machine perception. All real-world data, including images, sounds, texts, and time series, must be converted into vectors for the algorithms to recognise the patterns. Neural networks can aid us by easily clustering and classifying the supplied data (Nicholson, 2020).ClassificationNicholson (2020) asserts that all classification tasks require labelled datasets, which means that in order for a neural network to understand the relationship between labels and data, humans must apply their knowledge to the dataset. We call this supervised learning.ClusteringSimilarities are found through the aid of clustering and grouping. Deep learning may find similarities without labelling. Unsupervised learning is learning without labels. The majority of data in the world is unlabelled. The more data an algorithm can be trained on, the more accurate it will be, according to one machine learning law. As a result, unsupervised learning has the potential to create models that are extremely accurate (Nicholson, 2020).Back-propagation Al-Masri (2019) asserts that proper training of a neural network is the most crucial step of producing a well-founded model. One of the most popular training methods is known as Back-propagation. The foundation of neural network training is back-propagation. It is the process of adjusting a neural network's weights based on the error rate recorded in the previous epoch. Lower error rates are ensured through proper weight adjustment, which broadens the model's applicability and makes it more dependable.Newly added hidden layersIn neural networks, the function that adds weights to the inputs and guides them through an activation function as the output is situated in a hidden layer between the algorithm's input and output. In essence, the network's inputs are transformed nonlinearly by the hidden layers. The neural network's hidden layers can change based on how it performs, and vice versa for the layers' corresponding weights (Gad, 2018).Hidden layers are layers of mathematical operations, each one intended to produce an output specific to the desired outcome. For instance, squashing functions are a name for several types of hidden layers. Because they take an input and output a value between 0 and 1, which is the range for determining probability, these functions are especially helpful when the algorithm's desired result is a probability (OpenAI, 2019).The operation of a neural network can be decomposed into particular data transformations due to hidden layers. Each function in a hidden layer is tailored to deliver a certain result. For instance, succeeding layers may combine functions from a hidden layer that are used to recognise human eyes and ears to recognise faces in photos. Even if the functions to recognise eyes on their own are insufficient to distinguish things on their own, they can work together in a neural network (OpenAI, 2019).Effects of the number of iterationsGad (2018) argues that hidden layers are only necessary in artificial neural networks when non-linear data separation is necessary. The following guidelines are encouraged for determining the number of hidden layers and neurons per each hidden layer:Draw an estimated decision boundary to divide the classes based on the data.Create a set of lines to represent the decision boundary. Keep in mind that these lines must surrender to the decision boundary when combined.The number of lines that have been chosen is a representation of the first hidden layer's hidden neurons.A new hidden layer is added to join the lines that the preceding layer generated. Keep in mind that every time you need to link the lines in the previous hidden layer, a new hidden layer is added.Each hidden layer has a set number of neurons that are equivalent to the number of connections within the network. Code DiscussionIn this section, the submitted code will be discussed in terms of functionality and results. The objective was to add an additional hidden layer, which will introduce additional calculations to increase accuracy. As a result, new weights were declared to connect the new hidden layer with the previous and following layers. The next part of the code takes place within the loop that trains the model the specified number of iterations. During the various iteration each layer’s output will be passed through the relu function, which checks whether the value is greater than one. If the value is less than zero, the value is set to zero, otherwise the value is passed on. This concept is known as forward-propagation.Afterwards the delta of each layer will be calculated from the final layer (layer 3) to the first layer (Layer 0). This is achieved by passing down each calculated delta and multiplying it by its respective weight. This provides a weighing of the relative contributions of each weight to that error. As a result, the weights will then be changed according to the results produced. The weights are modified by following the process known as back propagation. ReferencesNicholson, C., 2020. A Beginner's Guide to Neural Networks and Deep Learning [Blog post].   Date of access: 26 Sept 2022.Al-Masri, A., 2019. How Does Back-Propagation in Artificial Neural Networks Work? [Blog post]. https://towardsdatascience.com/how-does-back-propagation-in-artificial-neural-networks-work-c7cad873ea7  Date of access: 26 Sept 2022.DeepAI. 2019. Hidden Layer.   Date of access: 26 Sept 2022.Gad, A., 2018. Beginners Ask “How Many Hidden Layers/Neurons to Use in Artificial Neural Networks?” [Blog Post].   Date of access: 26 Sept 2022.
Project management methodology analysisJ.G. VisagieSupervisor:	Prof N. KrugerCo-supervisor:	Prof J.T. Janse van RensburgGraduation: Student number:31594883Table of contents (Heading 0)List of TablesList of Figures IntroductionIn this research assignment, various project management methodologies will be investigated in order to determine which methodologies will be most applicable in the coming years. It is important for the methodology to satisfy and support the development team during the development of software applications in order to address the needs of stakeholders. Shehzad et al. (2017) states that the rapid expansion of the software development industry is due to the exponential increase in universal demand for software applications by consumers in their daily activities. Shehzad et al. (2017) further asserts that even with all improvements in software development technology, the global completion rate of software projects is about 30% - 40%. Glass (2001) argues that, in addition to traditional success criteria, there are other elements that pose a danger to software development. These vulnerabilities may be a root cause of failure, and the majority of them are not appropriately acknowledged to aid in their detection and mitigation. R. Zheng et al. (1997) states that project management, which is sufficiently supportive of software development, can help to mitigate these risks.This study will investigate the various strengths and weaknesses of Agile, The Control Objectives for Information and Related Technologies (COBIT) 2019 framework, and the Guide to Project Management Body of Knowledge (PMBOK). Introductory information, such as the structure, domains and principles, will be provided and explained.BackgroundCharvat (2003) states that a methodology is defined as a set of instructions or concepts that may be customized to a particular circumstance and used. These rules may take the form of a to-do list in a project setting. A methodology can also be a specialized strategy, templates, forms, or even a project life cycle checklist.Charvat (2003) further states that methodology could be defined in various other ways such as: A method for documenting a succession of steps and procedures that lead to a project's successful conclusion.A well-defined method for achieving a goalA set of methods, procedures, and standards that describe a synthesis of technical and management approaches for delivering a product, service, or solution.Project management has become a critical component of successful project delivery across all industries. Project management methodologies (PMM) can be used to increase the likelihood of reaching project goals, regardless of the industry or project size (Chin et al., 2010).  According to Chin et al. (2010) that which constitutes a project management methodology is not universally agreed upon. However, we can extract the components and specifications for a PMM from a thorough review of the many definitions, descriptions, and general discussions found in the literature.Chin et al. (2010) states that the following are various advantages to using a PMM:Establishes objectives and goals for the projectIncrease efficiency and effectiveness of business processesGreater adaptability and flexibility in applying experience acquired from one project to the next Planning, identifying, and managing risks, problems, and complexities with more precisionEnsures a higher level of standardization.Related workAgileFor decades, software engineering circles have debated how to structure software development in order to offer faster, better, and less expensive solutions. Many solutions have been proposed, ranging from software process standardization and measurement to a variety of actual tools, approaches, and practices. Many of the recent proposals for improvement have come from experienced practitioners who refer to their processes as agile software development (Dyba & Dingsoyr, 2008). Methods for agile software development, such as XP, Scrum, RUP, DSDM, form part of a collection of software development strategies developed by seasoned professionals (Agerfalk & Fitzgerald, 2006). Nerur et al. (2005) states that these approaches can be considered as a reaction against plan-based or traditional methods, which emphasize a rationalized, engineering-based approach, which claims that problems are fully specifiable and that optimal and predictable solutions exist for every problem. Rather than depending on systems, agile processes meet the challenge of an unpredictable world by focusing on people and their ingenuity (Nerur et al., 2005).Erickson (2005) provides the following definition of agility in context to software development: To promote quick responsiveness to changing surroundings, changes in user requirements, accelerated project deadlines, and the like, agility entails removing as much burden as possible from traditional software-development processes.PrinciplesCockburn and Williams (2000) asserts that agile approaches are designed to embrace, rather than reject, greater rates of change in the development processes.Dyba and Dingsoyr (2008) states that agile development is based on the following four principles:Individuals and interactions over processes and tools.Working software over comprehensive documentation.Customer collaboration over contract negotiation. Responding to change instead of following a plan to some extent.DomainsAccording to Keita (2020) there are six main domains when it comes to Agile project management. The following list contains these domains:Value-driven deliveryEvery project has one basic purpose in mind: to provide value to the clients. Another aspect that can boost value is reducing risk by removing obstacles that can lower the value of a completed product. Agile initiatives are assigned several aspects of value-driven delivery. For example:Planning valueDelivering valueConfirming valueTracking and reporting valueStakeholder engagementCustomers, project managers, various business representatives, the Agile team, and other external vendors are among the stakeholders participating in a project. They add value to a project and can influence its workflow. Agile teams must maintain a consistent communication line with all stakeholders in the development process to keep it on track.Improvement of team performanceTeam performance is Agile's third domain. Agile emphasises the formation of self-organized and independent teams in which team members are fully responsible for their duties. This gives team members more power and boosts performance. The success of a project is heavily dependent on the team. Each Agile project team should be made up of carefully selected team members who are participating in all aspects of the project.Adaptive planningBefore starting a project, the waterfall technique of software development required substantial planning. Teams discovered over time that client wants and market conditions are always changing, implying that old tactics would not produce adequate results. This Agile domain considers a flexible approach to planning that evolves with the project's progress.Problem detection and resolutionThe fifth Agile domain focuses on identifying and resolving project issues. Any issues that team members encounter during the development process must be resolved so that any additional work resulting from the issue may be avoided, saving Agile teams both time and money.Continuous improvementUsing new perspectives to improve future iterations is the final agile domain area. This method of learning boosts the project's value and improves its functionality. At the end of each iteration, retrospective sessions are held to obtain input and assess what needs to be changed or updated in future iterations.SWOT analysisSWOT analysis is a strategic planning method that helps find possible solutions for accomplishing set objectives by examining and evaluating the strengths, weaknesses, opportunities, and threats that projects and commercial endeavours face. (Shahir et al., 2008)In this section, the various strong points, weak points, opportunities and threats of software development methodologies will be discussed.Strong pointsShahir et al. (2008) states that agile software development has the following strength points:Promotes changeChange is viewed as an ally rather than an adversary. Change enables for more creativity and faster consumer value. Highsmith, cited by Shahir et al. (2008) argues that Agile approaches are well suited to projects with a high degree of task variety.Satisfying stakeholders and usersWhen stakeholders are included in the development team, their perspectives are considered when decisions are made, which often reduces the need for later rework. Users, on the other hand, consider themselves a part of the development team when their opinions are valued, and they are more likely to completely commit to moving the project forward.Test-DrivenMost Agile approaches prioritize coding and testing over research and design, to the point that many Agile methodologies develop test cases and test code before the real release begins. The key benefits of test-based coding include greater code maintainability, fewer inconsistencies, and better quality assurance.RefactoringRefactoring is required and inevitable in Agile processes due to some of the distinguishing qualities of Agile approaches, such as their focus on code rather than design, the necessity for dynamicity and circulation of team members, and the demand for a highly flexible product. The major goals of refactoring in this context are to remove redundant and unneeded code, increase code simplicity, achieve flexibility without changing the system's functionality, and improve developer communication.Shubh and Gandhi (2012) further asserts more strength points of agile software developmnent:Requirements InflationIn traditional software development technologies, the numerous elements that are not identified at the start of the project endanger estimations and timetables for project progress. Rather than using change-prevention techniques, prioritization sessions are scheduled to enable worthwhile modifications to be implemented and previously planned features to be replaced if the business approves.Early benefits to the user/businessAgile technique provides an early glimpse of how the final product will seem and function. This aids in the completion of the user requirements.Regaining the productivity of developmentWhen project schedules extend for a long period of time, the sense of urgency to work is often lacking, resulting in time lost in the early stages of the project that can never be recovered. In software projects, Agile techniques understand Parkinson's Law and the Student Syndrome. Work is time-boxed into reasonable iterations, and there is always a sense of urgency, thanks to short iterations.Reduction of Employee “Bus-Factor”In the traditional model, the departure of important employees from the project team with vital information delays project development. To reduce the "bus-factor," agile projects employ approaches such as common code ownership, pair programming, and frequent reporting during daily stand-ups, among others. The “bus factor” refers to the impact on the project if a key member is hit by a bus. Multiple team members communicate critical information when the "bus factor" is low, and the risk of staff turnover is minimal.Elimination of Inherent scheduled flawsSoftware development is notoriously difficult to predict and schedule at first. When it comes to software projects, however, the team is strongly involved in planning and estimation through activities like the XP planning game. Working in short increments reveals the team's true velocity, which is obvious to all stakeholders who are now more invested in the project.Conflicting requirements breakdownThe idea of subject matter expert, ambassador user, or customer proxy is used in agile projects to play the function of product manager. The concept is that the group must be immediately available to answer inquiries and make project decisions, whereas traditional projects suffer from specification breakdown when no one owns the role and opposing assumptions or conclusions are made. To ensure that decisions are made on time, agile projects have some sort of product owner role integral to their core team structure.Weak pointsThe following section will discuss some of the various weak points, as argued by Shubh and Gandhi (2012):Not fully understanding the differenceThe major issue is that genuine Agile is hardly performed. Software engineers, development managers, and consultants frequently confuse Agile with its lowercase twin, agile, and believe that Agile is all about flexibility and lack of process. Above all, Agile is not anarchy. Despite what you may believe, it does not mean that everyone does anything they want and that there is no sense of organization.Possibility of re-writing code during developmentRework is frequently required in agile projects when the many components of the program are combined and forced to interact due to a lack of long-term planning and a lightweight approach to architecture. When two or more developers are out of sync, chunks of code may need to be rewritten, resulting in increasing and higher rework expenses as the number of iterations grows.The reliance of customer interactionHeavy Customer Interaction is one of the main benefits of Agile, but it can also be a drawback in specific circumstances, as reflected in the four principles. One thing to keep in mind about agile development teams is that they require a lot of attention.Insufficient architectural planningBefore the heart of the software is produced, a dependable software architecture and platform are chosen. Otherwise, there's a good probability that a lot of labour will be wasted away. Many larger companies isolate software architecture and platform selection from software development via corporate architecture and architectural roadmaps, which relieves the agile software team of some of the work. The agile software strategy, on the other hand, will oppose defining and dealing with architecture if the platform is unknown prior to the start of the project and the architectural approach is new or unproven.Difficulty in coordination for large projects and organisationsAs an agile team grows, it becomes increasingly difficult to coordinate work due to its strong emphasis on contact, self-organizing client teams, vocal communication over written documentation, prototyping, and requirements flexibility. In continuation, Shahir et al. (2008) states the following additional weak points:Ineffective communication and interaction methodsFace-to-face contact is the most common sort of interaction in Agile techniques. Although other forms of communication are utilized to discuss ideas, the lack of models and recorded design leaves insufficient references in the event of conflicts or forgetting.Global or distributed development obstaclesMembers of the development team work in close proximity to one another in Agile techniques, and some processes even need the entire team to be in the same room or building. Face-to-face contact, daily and weekly meetings, and human interactions all play an important part in the effectiveness of such operations.High dependency on the development teamAgile approaches are more people-oriented than process-oriented, as stated in the Agile Manifesto. As a result, circumstances arise in which teamwork issues become more challenging than they should be.Misestimating Project time and budgetAgile principles allow for frequent modifications to requirements, however, this affects project time and cost estimation. Furthermore, calculating the workload is challenging owing to the lack of modelling and design processes. In the lack of analytical class diagrams, for example, the number of classes to be implemented is frequently unknown until later phases. As a result, project managers are unable to plan effectively, and project plans must be revised frequently.OpportunitiesShahir et al. (2008) identified the following opportunities which are listed below:Light analysis and designOnly the most basic and fundamental models, such as those describing use cases and classes, are used during analysis and design in a light analysis and design method. The adoption of such methods will help to alleviate the persistent model-phobia that plagued prior Agile methodologies.Expert AdviceUsing expert advice in various situations is an opportunity that should be taken full advantage of. This includes not only development professionals, who are heavily involved in Agile teams, but also domain-, technology-, and, most importantly, methodology experts, who can help fine-tune the technique to meet the project at hand.Distributed software development strategies and techniquesDistributed software development has become a modern trend because to the Internet's daily expansion and steady speed rise. Because of its accessibility and usefulness, teleconferencing technologies-based development and web environments are becoming increasingly popular.	Reverse engineeringThe implemented classes are frequently different from the ones that were originally proposed. This distinction could be in terms of class properties and methods, or it could simply be an unwelcome rise in the number of classes. The models may be generated fast using reverse engineering techniques based on the code.Standardized testing methodsYears of software development experience have resulted in the compilation and standardization of many testing methods. Such tried-and-true strategies may and should be used in conjunction with TDD to improve Q/A support in Agile development.Shubh and Gandhi (2012) has identified the following additional opportunities:Iterative and Incremental methodologyWhen employing Agile development approaches, every part of development is revisited throughout the life cycle, whether it be requirements or design. There is always a chance to move in a different path when a team stops and re-evaluates the course of a project every two weeks.Inspect and adapt approachThis strategy is the product of the iterative agile development technique, which allows developers to significantly cut both development time and cost to market by gathering requirements while constructing the application. The team work cycles are also limited to two weeks, giving clients the opportunity to test their success in the real world.Rapid action developmentBy eliminating the usability constraints in traditional development, methodologies like agile and scrum can either improve or damage the quality of the user experience.ThreatsThe following section entails the threats identified by Shubh and Gandhi (2012):Necessary documentation with lack of structureVarious agile techniques have an informal structure and are highly prescriptive of crucial activities.Requires greater cultural change to adoptIf the requirements of one area of code change over time, the same programming may need to be done numerous times, however if a plan is followed, a single region of code should only be written once.Tool to understand project velocityBecause no one knew the whole requirement at the start of the project, it was impossible to produce an accurate estimate of the work effort required to provide a code. Most agile techniques offer a better tool for understanding how a project works. By placing the software in the hands of the customers, agile methodologies allow for early identification of needs and project planning.In addition, Shahir et al. (2008) argues the following threats of agile software development:Lack of interest in utilization of agile methodologies in traditional organizationsTraditional organizations have had mixed reactions to Agile approaches, owing to problems in synchronizing traditional and Agile processes and/or human resources, as well as difficulties adhering to standards like CMM.COBIT 2019 frameworkThe following section is based on the information found within the COBIT 2019 Framework of Governance and Management Objectives.Best-practice frameworks have been established and advocated over time to aid in the understanding, design, and implementation of enterprise IT governance. COBIT 2019 expands on and integrates more than 25 years of research and development in this sector, not only incorporating new scientific discoveries but also operationalizing these ideas as practice.COBIT is a worldwide recognised set of tools that directors and IT specialists may use to guarantee that IT operations are in line with business objectives and goals (Zhang & Le Fever, 2013). COBIT is an enterprise-wide framework for the governance and management of information and technology. Governance and management are clearly separated in the COBIT framework. These two fields include separate activities, necessitate different organizational structures, and have different goals.Governance will promote the following:To define balanced, agreed-upon enterprise objectives, the needs, conditions, and options of stakeholders are examined in detail.Prioritization and decision-making provide direction.Performance and compliance are assessed in relation to agreed-upon goals and objectives.To achieve enterprise objectives, management plans, builds, runs, and oversees activities in accordance with the governance body's instructions.Management in most businesses is the duty of executive management, which is led by the chief executive officer (CEO).COBIT outlines the processes, organisational structures, rules and procedures, information flows, culture and behaviours, skills, and infrastructure that go into constructing and maintaining a governance system. COBIT describes the design factors that an organisation should consider when constructing a best-fit governance system. COBIT solves governance problems by collecting key governance components into governance and management objectives that can be controlled to the requisite competency levels.Structure of COBIT Governance and Management ObjectivesCOBIT 2019 has 40 governance and management objectives divided into five areas, as previously stated.•	Governance domainEvaluate, Direct and Monitor (EDM)•	Management domainsAlign, Plan and Organize (APO) – Information and Technology’s (I&T) general organisation, strategy, and supporting operations are addressed.Build, Acquire and Implement (BAI) - Defines, acquires, and implements I&T solutions, as well as their integration into business operations.Deliver, Service and Support (DSS) - Security, as well as the operational delivery and support of I&T services.Monitor, Evaluate and Assess (MEA) - examines I&T performance and compliance with internal performance targets, internal control objectives, and external obligations.Goals CascadeEach governance or management goal aids in the achievement of alignment objectives that are linked to bigger corporate objectives.Alignment goals (AG) include, but are not limited to:AG01: I&T compliance and support for business compliance with external laws and regulationsAG02: Managed I&T-related riskAG03: Realized benefits from I&T-enabled investments and services portfolioAG04: Quality of technology-related financial informationAG05: Delivery of I&T services in line with business requirementsEnterprise goals (EG) include, but are not limited to:EG01: Portfolio of competitive products and servicesEG02: Managed business riskEG03: Compliance with external laws and regulationsEG04: Quality of financial informationEG05: Customer-oriented service cultureAPO11 – Managed qualityThe COBIT 2019 framework provides the following description and purpose of APO11: Define and convey quality standards for all processes, procedures, and business outcomes. Promotes controls, ongoing monitoring, and the utilization of various tried and tested practises and standards. Ensure that technology solutions and services are delivered consistently to fulfil the enterprise's quality criteria and to meet the expectations of stakeholders.The following enterprise and alignment goals are utilised by APO11:APO05 – Managed portfolioThe COBIT 2019 framework provides the following description and purpose of APO05: Execute the investment strategy in accordance with the corporate architecture vision and I&T road map. Consider the various types of investments, as well as the available resources and budget limits. Evaluate, prioritise, and balance projects and services based on their alignment with strategic objectives, enterprise value, and risk, while managing demand within resource and financial limits. Select programmes for execution and add them to the active products or services portfolio. Monitor the overall performance of the company's products, services, and programmes, making adjustments as needed in response to programme, product, or service performance or shifting business priorities.The following enterprise and alignment goals are utilised by APO05:BAI01 – Managed ProgramsThe COBIT 2019 framework provides the following description and purpose of BAI01: Using a consistent programme management technique, manage all programmes from the investment portfolio in accordance with corporate strategy and in a coordinated manner. Initiate, plan, control, and execute programmes, as well as track the program's projected value. Reduce the risk of unanticipated delays, costs, and value degradation by realising intended business value. Improve interactions with and participation from business and end users to achieve this, as well as ensure the value and quality of programme deliverables and project follow-up inside programmes, and maximise programme contribution to the investment portfolio.The following enterprise and alignment goals are utilised by BAI01:BAI11 – Managed projectsThe COBIT 2019 framework provides the following description and purpose of BAI11: Manage all projects started within the company in accordance with the company's strategy and in a coordinated manner using the standard project management methodology. Begin, plan, control, and execute projects, and then conduct a post-implementation evaluation. Improve communication with and participation of business and end users to achieve defined project results and avoid the risk of unexpected delays, costs, and value erosion. Ascertain the value and quality of project deliverables, as well as their contribution to the defined programmes and investment portfolio.The following enterprise and alignment goals are utilised by BAI11:SWOT analysisStrengths The following section will discuss the benefits of using the COBIT 2019 framework, as argued by Gallagher (2020)Optimized IT governanceCOBIT 2019 assists firms in establishing measurable IT objectives as part of larger business plans. COBIT practitioners may also set up the essential controls and tools to assist IT managers in achieving their goals with the full force of their operations behind them. A variety of tools are included in the methodology to assist with this, including:The COBIT maturity model can be used to determine the level of performance that IT components must achieve in order to accomplish goals.Enhancing activities, which are recommended by the ISACA for identifying and removing flaws and limiting factors in COBIT implementations.Alignment between IT and business goalsThere are a total of 40 Management and Governance Objectives in the COBIT core model. Practitioners study this extensive collection to select focal areas based on their own objectives, needs, and environment, among other factors. They can then create custom frameworks that are tailored to their vision of optimal IT governance.Customizable to suit your prioritiesCOBIT 2019 is ideal for organisations that already employ IT techniques. COBIT's 'Tactical Design Factors' are tailored to a user's preferences for technologies, models, and frameworks to utilise in their operations. These variables can be used by practitioners to create systems that accept such aspects while also maximising their coherence and synergy.WeaknessesThe following section will discuss practical problems which are encountered when utilising COBIT as stated by Zhang and Le Fever (2013).Complicated concepts and structureVarious professionals and specialists within the field have acknowledged that understanding the COBIT framework is not an easy task. As previously shown, the framework is massive and consists of numerous objectives, goals, guidelines, and even a maturity model. To fully understand everything contained in the framework takes a long time. Lack if implementation guidance and proven benefitsCOBIT's general character makes it challenging for corporations to comprehend and implement. Although the COBIT Management Instructions and Implementation Guidelines state that COBIT must be tailored to a given environment, they do not offer actual ways or guidelines to help firms do so. Even though it was evident that a COBIT programme should be implemented, several executives agreed that they would rather focus on ITIL and ISO27000, which had higher value.ThreatsPMBOK The following section is based on information found within the Guide to the Project Management Body of Knowledge, written by the Project Management Institute.The Project Management Standard provides project management principles that guide project professionals and other stakeholders that work on or are involved with projects in their behaviours and activities. The Project Management Standard provides a foundation for understanding project management and how it facilitates desired objectives. This standard is applicable to any industry, location, size, or distribution method, such as predictive, hybrid, or adaptive. It outlines the structure in which projects run, including governance, possible functions, the project environment, and concerns for the project-product management link.A project performance domain is a collection of connected activities that are necessary for the successful completion of a project. Eight project performance domains have been identified:Project Management Knowledge AreasThis next section will focus on The Project Management Knowledge Areas. The PMBOK Guide states that The Project Management Knowledge Areas are fields or specialisations utilised when managing projects. A knowledge area is a set of processes associated with a particular topic in project management.Project Integration ManagementWithin the Project Management Process Groups, Project Integration Management encompasses the processes and activities for identifying, defining, combining, unifying, and coordinating the numerous processes and project management activities.Project Scope ManagementProject Scope Management refers to the procedures that must be followed to guarantee that the project includes all of the work necessary to execute it successfully.Project Schedule ManagementProject Schedule Management includes the processes required to manage the timely completion of the project.Project Cost ManagementThe activities involved in planning, estimating, budgeting, financing, funding, managing, and controlling expenses so that the project can be completed within the allocated budget are referred to as project cost management.Project Quality ManagementProject Quality Management refers to the procedures for implementing the organization's quality policy into project and product quality requirements planning, management, and control in order to fulfil stakeholders' expectations.Project Resource ManagementProject Resource Management refers to the procedures for identifying, acquiring, and managing the resources required to complete a project successfully.Project Communications ManagementProject Communications Management refers to the procedures that must be followed to guarantee that project information is collected, created, distributed, stored, retrieved, managed, controlled, monitored, and finally disposed of in a timely and suitable manner.Project Risk ManagementRisk management planning, identification, analysis, reaction planning, response implementation, and risk monitoring are all procedures that go into project risk management.Project Procurement ManagementProject Procurement Management refers to the procedures for acquiring products, services, or results from sources outside than the project team.Project Stakeholder ManagementProject Stakeholder Management entails identifying the people, groups, or organisations who may have an impact on or be affected by the project, analysing stakeholder expectations and their impact on the project, and developing appropriate management strategies for effectively engaging stakeholders in project decisions and execution.SWOT analysisThe following SWOT section is based on information asserted by Buehring (2021)StrengthsThe PMBOK Guide's key strength is that it offers a wide range of useful tools and procedures. There are 132 tools and techniques detailed or mentioned in all. Although the PMBOK guide loosely describes many of the tools and techniques, the main attraction is that the PMBOK Guide asserts when these various tools and techniques should be utilised during project management. Another advantage is that the PMBOK Guide's knowledge categories can be dealt with independently of one another. In many cases of uncertainty, the PMBOK Guide provides extensive information on specific generic areas that will be encountered, such as communication management and schedule management.WeaknessesOne of the PMBOK Guide's flaws is the absence of clear responsibilities for project management team members. This is a broad term that refers to project team members who are directly involved in project management tasks. The problem with the PMBOK Guide's approach is that many of these obligations may be overlooked simply because who is responsible is not clearly specified. The extremely elaborate and extensive descriptions of some of the aspects are a second flaw. Complexity is always a burden, not an aid, and as previously stated, anecdotal evidence suggests that the PMBOK Guide is not helping itself in this area. The PMBOK Guide, developed by North American authors, is written entirely from a North American perspective and does not always translate well to other cultures.ThreatsProblem statementAs discussed above, there exist various project management methodologies, each with its own strengths and weaknesses. Each PMM is based on their own unique principles and caters to the numerous different domains during the development lifecycle.  PMM is an essential component that contributes immensely to the success of a development cycle and its importance cannot be understated as the advantages of using a PMM outweigh the risks and weaknesses associated with it. Thus, the question arises, what project management methodology will be the most effective and efficient for the next five years.Figure 11:	This is the title of the figure.  (CaptionBot_Tbl_Fig)Table 11:	This is the title of the table.  (CaptionTop_Tbl_Fig)Figure 21:	This is the title of the figure.  (CaptionBot_Tbl_Fig)Table 21:	This is the title of the table.  (CaptionTop_Tbl_Fig)Analysis.Since the start of the COVID-19 pandemic, the office experience of various developers and managers has shifted to a work from home environment. From meetings being held on zoom, to various phases of the development cycle being completed at home. As a result of more work being completed outside of company premises, various processes and guidelines are influenced by these factors and require a re-evaluation of how these methodologies function within a post-COVID-19 world.The Agile methodology and its processes will need to be re-designed in order to accommodate the large switch from working in an office to working from home. Agile is hugely dependent on the interaction between people, as stated in its principles, which presents a new challenge when working from home.  Agile is highly focused on independent and self-organised team performance, as stated in the third domain. Regardless of the impact that working from home has, developers and teams are still able to deliver their work efficiently and effectively. The reliance on customer interaction is a weakness that continues to prevail within the Agile methodology, which is an even greater weakness since the start of the pandemic. The need for effective and efficient communication is ever-increasing based on the various factors discussed above. The rise of technologies such as zoom and teams have made it easier for managers, developers, stakeholders and clients to communicate with each other outside of the workplace. Every PMM will face challenges, but fortunately, as developers, challenges will be overcome and Agile is a methodology that can still be utilised in the coming years.The COBIT 2019 framework provides various actions, processes, guidelines and goals for the entire enterprise. The governance and management of information and technology are influenced by these factors. As a result of the framework covering the entire enterprise, the entire framework is enormous and will require extreme dedication and commitment to successfully implement the framework. In addition to the complexity, the framework does not provide any guidance to users on how to implement these goals and objectives. The frameworks promotes the uniqueness of different environments found within different companies, but, as stated above, no actual guidance is provided for the handling of unique environments within companies.  But all is not lost, as the COBIT framework has various advantages as stated earlier. The alignment of business goals and IT is an important factor that contributes to the success of a project.The project management body of knowledge provides information on multiple tools, technologies and processes that should be utilised in order to ensure the successful and efficient development of projects. The PMBOK provides, in detail, a guide to efficient management strategies that aid in the development processes. As with the COBIT 19 framework, the PMBOK Guide is an extensive read and will require a large amount of time to understand and successfully implement within a company. One of the PMBOK Guide’s best features is the all-inclusive knowledge areas that provide extensive information on the various management of generic environments. Successful management leads to better performance of development teams and aids with the achievement of business goals.These methodologies have been around for a long time and have been improved as time passed. Thus it is reasonable to assume that these methodologies will be effective and applicable for the next 5 years. Considering the scope and size of PMBOK and COBIT, Agile methodologies are a great starting methodology for new companies or companies looking to switch to a new methodology. It is easy to implement and will aid in the initialisation of the development cycle. After the initial dust has settled and the Agile methodology has been successfully implemented, new uncertainties might appear, such as effective communication between development teams, the establishment of long term goals and many other scenarios. This when the focus should be shifted over the COBIT 19 framework as it will provide further insight on how to deal with these uncertainties. The gradual study and introduction of the COBIT framework will streamline the whole process of implementing the guidelines and goals of COBIT. The combined use of Agile methodologies and the integration of the COBIT framework at a later stage will increase the company’s development performance and will greatly increase the chance of successful project completion.ConclusionThe utilisation of project management methodologies is essential to the success of development projects. Various PPMs are based on different principles, each contributing to the uniqueness and different methods and processes utilised by each methodology. The rise of work from home opportunities is a new challenge that these methodologies should address in order to ensure the continued successful completion of development cycles. The various Agile methodologies that exist, in conjunction with the COBIT 19 framework, will enable developers to continue effective development and promotes the efficient management of various departments in the company.Figure 31:	This is the title of the figure.  (CaptionBot_Tbl_Fig)Table 31:	This is the title of the table.  (CaptionTop_Tbl_Fig)Bibliography
ITRW 624 Assignment 2JG VisagieSupervisor:	Prof Neels KrugerStudent number:31594883Table of contents (Heading 0)IntroductionIn this research assignment, various project management and development methodologies will be investigated  to international industries. The methodology needs to satisfy and support the development team during s. Shehzad et al. (2017) state that the rapid expansion of the software development industry is due to the exponential increase in universal demand for software applications by consumers in their daily activities. Angel et al. (2022) argue that the expanding usage of techniques in project development gave rise to the concept of a comparative study on project management and software development processes. Software development approaches  a group of techniques that must be combined to produce a methodical processevelopment approaches have changed over time to reflect the times and new technologies. Problem StatementThe main problem that this research paper will aim to address is to explore the various software development methodologies and Project Management Methodology used locally by various companies  used on an international level. This study will also  how the Covid-19 pandemic has influenced and shaped software development methodologies and Project Management Methodologies and how we can adapt and stay ahead of these changes.There are many different  and Project Management methodologies, each with distinct advantages and disadvantages. Each SDM and PMM is built on its distinct concepts and supports the many various domains across the development lifecycle. The benefits of employing an SDM and PMM outweigh , making it a vital component that significantly contributes to the success of a development cycle.Literature studyThis literature study will focus on information the various Project Management Methodology and software development methodologies, as well as some of their strong and weak points in order to provide a general understanding of the methodologies companies use and how future scenarios can influence the choice of Project Management Methodology and software development methodologies.Agile What is Agile development?Agile is a broad term for a set of software development principles. It is a theoretical framework for software engineering that starts with the planning stage and progresses through incremental and iterative interactions throughout the project's lifecycle until the deployment stage. Agile approaches' initial objective is to reduce overhead in the software development process while enabling the adoption of changes without endangering the process or requiring excessive rework.Agile values and principlesThe Agile Software Development manifesto provides the following values and principles to which Agile development should adhere and strive for:ValuesIndividuals and interactions over processes and tools:The first value in the manifesto suggests that it is incorrect to emphasise abstract formal processes and their technical environment as factors in software development. Instead, communication, interaction, and the calibre of the human software developers that these factors serve should be prioritised.Working software over comprehensive documentation:Although documentation is an essential and significant part of any agile software development process, the time and resources allocated must be managed and streamlined so as not to stifle the software development process.Customer collaboration over contract negotiation:The purpose of agile software development is to adapt to changes in requirements at any stage. As a result, throughout any process, frequent customer feedback, negotiations, and collaboration with the development team are necessary to meet the customers' actual needs as opposed to those that can be satisfied through formal agreements and contracts. However, the agreements that detail how the software firm operates and the connection between the development team and its clients are still necessary.Responding to change over following a plan: as the software development process moves forward since both the developer and the customers will gain more knowledge and a deeper understanding of the system. Since achieving customer happiness is the ultimate objective, responding to changes in the development process life cycle is given priority in the Agile manifesto rather than adhering to a rigidly defined plan.ScrumScrum is a methodology that enables people to work productively and creatively to deliver products with the highest potential value while addressing complex adaptive problems (Scrum, 2022).Scrum FrameworkScrum is a simple framework that assists individuals, groups, and organisations  value by developing adaptable solutions to challenging issues. The Scrum Guide, written by the co-creators of Scrum Ken Schwaber and Jeff Sutherland, provides a clear and concise explanation of Scrum. The definition of Scrum can be found in this guide. Accountabilities, events, artefacts, and the rules that bring them all together make up this description of Scrum (Scrum, 2022).Scrum is the antithesis of a large group of interconnected required components. The Scrum approach is not one. Empiricism is a scientific method that Scrum uses. Scrum uses a heuristic approach, respect for people, and self-to deal with unpredictability and solve complicated problems instead of a programmed algorithmic one. The illustration below shows Scrum in Action as it is taught by Ken Schwaber and Jeff Sutherland in their book Software in 30 Days, which covers the entire software development lifecycle (Scrum, 2022).Agile development compared to traditional developmentTable 1 Comparison between traditional development and Agile Development (Scrum, 2022) Strong pointsShahir et al. (2008) state that agile software development has the following strength points:Promotes changeChange is viewed as an ally rather than an adversaryhe change enables more creativity and faster consumer value. Highsmith, cited by Shahir et al. (2008) argues that Agile approaches are well suited to projects with a high degree of task variety.Satisfying stakeholders and usersWhen stakeholders are included in the development team, their perspectives are considered when decisions are made, which often reduces the need for later rework.  consider themselves a part of the development team when their opinions are valued, and they are more likely to completely commit to moving the project forward.Test-DrivenMost Agile approaches coding and testing over research and design, to the point that many Agile methodologies develop test cases and test code before the real release begins. The key benefits of test-based coding include greater code maintainability, fewer inconsistencies, and better quality assurance.RefactoringRefactoring is required and inevitable in Agile processes due to some of the distinguishing qualities of Agile approaches, such as their focus on code rather than design, the necessity for dynamicity and circulation of team members, and the demand for a highly flexible product. The major goals of refactoring in this context are to remove redundant and unneeded code, increase code simplicity, achieve flexibility without changing the system's functionality, and improve developer communication.Shubh and Gandhi (2012) further asserts more strength points of agile software development:Requirements InflationIn traditional software development technologies, the numerous elements that are not identified at the start of the project endanger estimations and timetables for project progress. Rather than using change-prevention techniques, sessions are scheduled to enable  and previously planned features to be replaced if the business approves.Early benefits to the user/businessAgile technique provides an early glimpse of how the final product will seem and function the user requirements.Regaining the productivity of developmentWhen project schedules extend for a long period, the sense of urgency to work is often lacking, resulting in time lost in the early stages of the project that can never be recovered. . Work is time-boxed into reasonable iterations, and there is always a sense of urgency, thanks to short iterations.Reduction of Employee Bus-FactorIn the traditional model, the departure of employees from the project team with vital information delays project development. To reduce the "bus factor," agile projects employ approaches such as common code ownership, pair programming, and frequent reporting during daily stand-ups, among others. The bus factorrefers to the impact on the project if a key member is hit by a bus. Multiple team members communicate critical information when the "bus factor" is low, and the risk of staff turnover is minimal.Elimination of Inherent scheduled flawsSoftware development is notoriously difficult to predict and schedule at first. When it comes to software projects, however, the team is strongly involved in planning and estimation through activities like the XP planning game. Working in short increments reveals the team's velocity, which is to all stakeholders who are now more invested in the project.Conflicting requirements breakdownThe idea of subject matter expert, ambassador user, or customer proxy is used in agile projects to play the function of product manager. The concept is that the group must be immediately available to answer inquiries and make project decisions, whereas traditional projects suffer from specification breakdown when no one owns the role and opposing assumptions or conclusions are made. e.Weak pointsThe following section will discuss some of the various weak points, as argued by Shubh and Gandhi (2012):Not fully understanding the differenceThe issue is that genuine Agile is hardly performed. Software engineers, development managers, and consultants frequently confuse Agile with its lowercase twin, agile, and believe that Agile is all about flexibility and lack of process. Above all, Agile is not anarchy. Despite what you may believe, it does not mean that everyone does anything they want and that there is no sense of .Possibility of re-writing code during developmentRework is frequently required in agile projects when the  are combined and forced to interact due to a lack of long-term planning and a lightweight approach to architecture. When two or more developers are out of sync, chunks of code may need to be rewritten, resulting in increased and higher rework expenses as the number of iterations grow.The reliance on customer interactionHeavy Customer Interaction is one of the main benefits of Agile, but it can also be a drawback in specific circumstances, as reflected in the four principles. One thing to keep in mind about agile development teams is that they require a lot of attention.Insufficient architectural planningBefore the heart of the software is produced, dependable software architecture and platform are chosen. Otherwise, a good probability that . Many larger companies isolate software architecture and platform selection from software development via corporate architecture and architectural roadmaps, which relieves the agile software team of some of the work.  will oppose defining and dealing with architecture if the platform is unknown prior to the start of the project and the architectural approach is new or unproven.Difficulty in coordination for large projects and organisationsAs an agile team grows, it becomes increasingly difficult to coordinate work due to its strong emphasis on contact, self-client teams, vocal communication over written documentation, prototyping, and requirements flexibility.In continuation, Shahir et al. (2008) state the following additional weak points:Ineffective communication and interaction methodsFace-to-face contact is the most common sort of interaction in Agile techniques. Although other forms of communication are to discuss ideas, the lack of models and recorded design leaves insufficient references in the event of conflicts or forgetting.Global or distributed development obstaclesMembers of the development team work in close proximity to one another in Agile techniques, and some processes even need the entire team to be in the same room or building. Face-to-face contact, daily and weekly meetings, and human interactions all play an important part in the effectiveness of such operations.High dependency on the development teamAgile approaches are more people-oriented than process-oriented, as stated in the Agile Manifesto. As a result, circumstances arise in which teamwork issues become more challenging than they should be.Misestimating Project time and budgetAgile principles allow for frequent modifications to requirements; however, this affects project time and cost estimation. Furthermore, calculating the workload is challenging owing to the lack of modelling and design processes. In the lack of analytical class diagrams, for example, the number of classes to be implemented is frequently unknown until later. As a result, project managers  plan effectively, and project plans must be revised frequently.COBIT 2019 FrameworkThe following section is based on the information found within the COBIT 2019 Framework of Governance and Management Objectives.Best-practice frameworks have been established and advocated over time to aid in the understanding, design enterprise IT governance. COBIT 2019 expands on and integrates more than 25 years of research and development in this sector,  these ideas as practice.COBIT is a  with business objectives and goals (Zhang & Le Fever, 2013). COBIT is an enterprise-wide framework for the governance and management of information and technology. Governance and management are clearly separated in the COBIT framework. These two fields include separate activities, necessitate different structures, and have different goals.Governance will promote the following:To define balanced, agreed-upon enterprise objectives, the needs, conditions, and options of stakeholders are examined in detail.and decision-making provide direction.Performance and compliance are assessed in relation to agreed-upon goals and objectives.To achieve enterprise objectives, management plans, builds, runs, and oversees activities in accordance with the governance body's instructions.Management in most businesses is the duty of executive management, which is led by the chief executive officer (CEO).COBIT outlines the processes, organisational structures, rules and procedures, information flows, culture and behaviours, skills, and infrastructure that goes into constructing and maintaining a governance system. COBIT describes the design factors that an organisation should consider when constructing a best-fit governance system. COBIT solves governance problems by collecting key governance components into governance and management objectives that can be controlled to the required competency levels.Structure of COBIT Governance and Management ObjectivesCOBIT 2019 has 40 governance and management objectives divided into five areas, as previously stated.•	Governance domainEvaluate, Direct and Monitor (EDM)•	Management domainsAlign, Plan and (APO) – Information and (I&T) general organisation, strategy, and supporting operations are addressed.Build, Acquire and Implement (BAI) - Defines, acquires and implements I&T solutions their integration into business operations.Deliver, Service and Support (DSS) - Security, as well as the operational delivery and support of I&T services.Monitor, Evaluate and Assess (MEA) - examines I&T performance and compliance with internal performance targets, internal control objectives, and external obligations.Strengths The following section will discuss the benefits of using the COBIT 2019 framework, as argued by Gallagher (2020)IT governanceCOBIT 2019 assists firms in establishing measurable IT objectives as part of larger business plans. COBIT practitioners may also set up the essential controls and tools to assist IT in achieving their goals with the full force . A variety of tools are included in the methodology to assist with this, including:The COBIT maturity model can be used to determine the level of performance that IT components must achieve in order to accomplish goals.Enhancing activities, which  for identifying and removing flaws and limiting factors in COBIT implementations.Alignment between IT and business goalsThere are a total of 40 Management and Governance Objectives in the COBIT core model. Practitioners study this extensive collection to select focal areas based on their own objectives, needs, and environment, among other factors. They can then create custom frameworks that are tailored to their vision of optimal IT governance.to suit your prioritiesCOBIT 2019 is ideal for organisations that already employ IT techniques. COBIT's 'Tactical Design Factors' is tailored to a user's preferences for technologies, models, and frameworks to utilise in their operations. s to create systems that accept such aspects while also maximising their coherence and synergy.WeaknessesThe following section will discuss practical problems encountered when utilising COBIT as stated by Zhang and Le Fever (2013).Complicated concepts and structureVarious professionals and specialists within the field have acknowledged that understanding the COBIT framework is not an easy task. he framework is massive and consists of numerous objectives, goals, guidelines, and even a maturity model. To fully understand everything contained in the framework takes a long time. Lack of implementation guidance and proven benefitsCOBIT's general character makes it challenging for corporations to comprehend and implement. Although the COBIT Management Instructions and Implementation Guidelines state that COBIT must be tailored to a given environment, they do not offer ways or guidelines to help firms. Even though it was evident that a COBIT programme should be implemented, several executives agreed that they would focus on ITIL and ISO27000, which had a higher value.PMBOKThe following section is based on information found within the Guide to the Project Management Body of Knowledge, written by the Project Management Institute. The Project Management Body of Knowledge (PMBOK) is a collection of accepted terms and principles for project management. A Guide to the Project Management Body of Knowledge (PMBOK Guide), a book whose seventh edition was published in 2021, presents the body of knowledge as it develops through time. The Project Management Institute (PMI), which grants the CAPM and PMP credentials, oversaw the creation of this document. Much of the PMBOK Guide, including the critical path technique and work breakdown structure, is specific to project management. The PMBOK Guide . Financial forecasting, organisational behaviour, management science, budgeting, and other planning techniques are some other management disciplines that cross over with the PMBOK Guide.Project managers and other stakeholders who work on or are involved with projects are guided in their actions and behaviours by the project management standard's project management principles. Understanding project management and how it supports desired objectives is made easier by the Project Management Standard. Any industry, location, size, or distribution strategy—such as predictive, hybrid, or adaptive—can use this standard. It describes the organisational structure of projects, including governance, potential roles, the project environment, and worries about the relationship between project-product management.The following SWOT section is based on information asserted by Buehring (2021)StrengthsThe PMBOK Guide's key strength is that it offers  tools and procedures. There are 132 tools and techniques detailed or mentioned in all. Although the PMBOK guide loosely describes many of the tools and techniques, the main attraction is that the PMBOK Guide asserts when these various tools and techniques should be utilised during project management. Another advantage is that the PMBOK Guide's knowledge categories can be dealt with independently. In many cases of uncertainty, the PMBOK Guide provides extensive information on specific generic areas that will be encountered, such as communication management and schedule management.WeaknessesOne of the PMBOK Guide's flaws is the absence of clear responsibilities for project management team members. This  refers to project team members who are directly involved in project management tasks. The problem with the PMBOK Guide's approach is that many of these obligations may be overlooked simply because who is responsible is not clearly specified. The extremely elaborate and extensive descriptions of some of the aspects are a second flaw. Complexity is always a burden, not an aid, and as previously stated, anecdotal evidence suggests that the PMBOK Guide is not helping itself in this area. The PMBOK Guide, developed by North American authors, is written entirely from a North American perspective and does not always translate well to other cultures.Case StudyTo accurately satisfy the research question, I case study was conducted, where a questionnaire was utilised and distributed to various software development companies in South Africa. The , each with different roles and responsibilities. This approach will aid in accumulating the necessary information to deduce various results which will be displayed in tables and graphs below. The companies that were chosen to partake in the questionnaire were selected broadly and flexibly. Each company has a unique number of employees and focuses on different areas of work. This ensures that the information utilised is well-rounded and a good representation of the industry. The questions asked within the case study are focused on the impact that Covid-19 has had on employees and the company.Information about the companiesThe following information about each respective company was acquired from their websites.IntegrityIntegrity Software is a software company specialising in dynamic insurance management solutions tailor-made for the short-term insurance industry. Integrity Software has a firm foundation of business excellence based on our proactive approach to client support, superior product knowledge, and the continual improvement of our products and services. Integrity Software management solutions are designed around accounting functionality through policy and claims management rather than the other way around, allowing the optimal and efficiently auditable financial management of our partnered operations.Integrity software is a small company with a total number of employees ranging from 1 to 100. The employee was interviewed is a developer. Integrity primary software development methodology is Agile, specifically scrum and DevOps. The company utilise Agile as their project management methodology.IsoMetrixIsoMetrix is an award-winning risk management software developer providing state-of-the-art solutions for EHS, ESG and GRC management. For over 25 years, global companies have trusted IsoMetrix to manage their environmental, health, safety, and sustainability risks. IsoMetrix eliminates siloed risk management by replacing multiple-point solutions with one integrated system. By breaking down the silos in risk management, our customers are empowered to proactively identify risks and prevent unwanted outcomes.IsoMetrix is a medium company with a total number of employees ranging from 101 to 500. The employee which was interviewed is an App Specialist. primary software development methodology is Agile, specifically scrum. The company utilise Agile as their predominant project management methodology.Advance.IOAdvance provides professional services over the entire spectrum of IT development disciplines, with complementary services such as IoT and related component manufacturing. Advance offers various services such as:Rapid application development servicesSystem integrationMachine learningUI/VR/ARCloud computingInternet of things (IoT)Advance is a medium company with a total number of employees ranging from 101 to 500. The employee which was interviewed is a Lead Developer. primary software development methodology is Agile, specifically KanBan. The company utilise Agile as their predominant project management methodology.BBDCombining deep cross-sector experience with the latest innovations, BBD creates impactful and reliable tech solutions and  while offering support ts to meet their respective strategic business goals.BBD provides the following services to its clients:Digital StrategyTech and business consultingCloud enablementSoftware developmentSystem integrationMaintenance and supportUX/UIOrchestration and automationRisk toolkitAI-driven searchBBD is a large company with a total number of employees ranging from 501 to 1000. The employee which was interviewed is a Lead Developer. primary software development methodology is Agile. BBD utilises different Agile processes, namely Scrum, Rapid App Development, and DevOps. In addition, the Waterfall methodology is utilised in conjunction with Agile. The project management methodology utilised is Waterfall and Agile.Sedibeng Districts officeThe Sedibeng District Municipality is a Category C municipality situated on the southern tip of the Gauteng Province and strategically located on the border of three other provinces, namely Free State, North-West and Mpumalanga.Vision: Building towards a developmental Metropolitan River City of choice.Mission: To promote and sustain Integrated Service Delivery that Enhances and Supports the municipality to achieve growth and development for its community.Goals:To promote efficient and effective Integrated Services that address the socioeconomic and environmental development imperatives of the Region.To Implement Prudent and Cost-effective Financial Management and Sustainability.To ensure Good Governance and sound management practices.To ensure effective Service Delivery.The questionnaire results supplied by the Sedibeng Districts offices provided some insights into which Project Management Methodologies are used and how Covid-19 has affected a branch of government. No software development takes place within the department. Although no development takes place, the branch still focuses on IT-related projects within the government. The Sedibeng Districts Municipality is a medium entity with a total number of employees ranging from 101-500. The employee role of the interviewee is IT Operations Manager. The project management methodology utilised at the Sedibeng Districts Offices is PMBOK.AnalysisThe following analysis is based on the data received from the questionnaires answered by the companies discussed above.Since the start of the COVID-19 pandemic, the office experience of various developers and managers has shifted to a work-from-home environment. From meetings being held on zoom, to various phases of the development cycle being completed at home. As a result of more work being completed outside of company premises, various processes and guidelines are influenced by these factors and require a re-evaluation of how these methodologies function within a post-COVID-19 world.Table 2 Impact of COVID-19 on organisationsTable 3 Impact of COVID-19 on Project ManagementTable 4 Impact of COVID-19 on Software DevelopmentTable 5 Positive impact results of COVID-19In reference to Tables 2, 3, 4 and 5, we can see that there is a clear indication that employees feel that COVID-19 has  their organisations. Most employees feel that COVID-19 has influenced  project management and software development is conducted. The most interesting finding was that although COVID-19 has  companies, employees seem to feel that COVID-19 has positively affected the company. Table 5 consists of the total results of all the COVID-19 questions relating to a positive experience. We can see that many employees feel that COVID-19 has had a positive influence on project management, software development and general work/life experience.Table 6 Software Development Methodologies utilisedIn reference to table 6, which consists of the results  the software development methodologies used by companies, we can see that majority of companies, regardless of size and field of work, prefer to utilise the many different Agile methodology variations.Table 7 Project Management Methodology utilisedIn reference to table 7, which consists of the results  the Project Management Methodology used by companies, we can see that most companies utilise Agile as their Project Management Methodology in conjunction with Agile as their software development methodology. Interestingly, most employees stated that they can see a difference between Agile as a software development methodology and Agile as a project management methodology.Table 8 Workload completed at company officesIn reference to table 8, which consists of results in relation to which location employees completed their work, we can see that before COVID-19 much of the work was completed on-site. When COVID-19 began, we can see that most employees started working from home or a different location, and after COVID-19 ended, we can see that most of the employees returned to the office. Although, the results show that more work is being done from a different location than the company offices.Considering all the results, we can conclude that COVID-19 has had a significant impact on employee work life, location of work, company software development methodologies, company Project Management Methodology, and the . Although all is not lost because most employees believe to some extent that COVID-19 has positively influenced their companies and working experience.The questionnaire results show that Agile is the most popular among Project Management Methodology and software development methodologies, although the specific type of Agile methodology used might be different, the core concepts and values are still the same. As stated within the literature study, Agile is highly dependent on communication. COVID-19 has eliminated the possibility of meeting face-to-face with employees and clients which has played a large role in the way we communicate. Various communication tools have risen to aid with scenarios such as COVID-19. Agile can continue to be used during scenarios such as COVID-19 if the company successfully and effectively communicates with their employees via the various software that has been released in recent years.ConclusionThe utilisation of Project Management Methodology and software development methodologies is essential for the successful development of projects. Various project management methodologys and SDMs are based on different principles, each contributing to each uniqueness, techniques, and processes. The most utilised PROJECT MANAGEMENT METHODOLOGY and SDM is the combined use of Agile for both PROJECT MANAGEMENT METHODOLOGY and SDM. Agile remains fairly popular and will remain popular in the coming years. In the event that another COVID-19 scenario occurs, the successful utilisation of a methodology such as Agile will be highly dependent on the ability to effectively and efficiently communicate with employees outside of the office.Bibliography Shehzad, B., Awan, K., 2017. Identification of Patterns in Failures of Software Projects. Journal of Information Science and Engineering, 33.Shahir, HM., Daneshpajouh, S., Ramsin. 2008. Improved Strategies for Agile Processes: A SWOT Analysis approach. Sixth International Conference on Software Engineering Research, Management and Applications.Shub, S., Gandhi, P. 2012, SWOT Analysis of Agile Methodologies. Procurement of the international conference on advances in Computer Science and Electronic Engineering.Zhang, S., Le Fever, H. 2013. An Examination of the Practicability of COBIT Framework and the Proposal of a COBIT-BSC Model. Journal of Economics, Business and Management. 1(4).Gallagher, P. 2020. What are the benefits of COBIT 2019?  Date of access: 14 Oct. 2022Buehring, S. 2021. The SWOT business analysis technique.  Date of access: 14 Oct. 2022.Dyba, T., Dingsoyr, T. 2008. Empirical studies of agile software development: A systematic review. Information and Software Technology, 50(9-10).Al-Saqqa, S. Sawalha, S., Abdel-Nabi, H. Agile Software Development: Methodologies and Trends. International Journal of Interactive Mobile Technologies, 14(11):246.Anghel, I.I., Calin, R.S., Stanica, I.C., Tudose, C., Boiangiu, C.A. Software Development methodologies: A comparative analysis. U.P.B Science Bulletin, Series C, 84(3).Scrum. 2022. What is Scrum?  Date of Access: 13 Oct. 2022.Agile Manifesto. 2001. Manifesto for Agile Software Development.  Date of access: 14 Oct. 2022.Integrity Software. 2022. About Us.  Date of Access: 15 Oct. 2022.Advance.IO. 2022. About us.  Date of Access: 15 Oct. 2022.IsoMetrix. 2022. About us.  Date of Access: 15 Oct. 2022.Sedibeng Districts Office. 2022. About us.  Date of Access: 15 Oct. 2022.BBD. 2022. About us.  Date of Access: 15 Oct. 2022.
Re-engineering an enterprise resource planning system: Methodologies, frameworks, and processes.JG Visagie31594883Research Paper for the Scripture submitted in partial fulfilment of the requirements for the degree Bachelor of Science (Honours) in computer science and information technology at the North-West UniversitySupervisor: Mrs E.S. CampherDate of submission: 30/10/2022Version: 1.0Table of contentsList of FiguresList of TablesAbstractThis study is concerned with identifying and utilising various methodologies, frameworks and processes that can contribute to the successful re-engineering of an Enterprise Resource Planning (ERP) system for the Instrument Maker Department. This study was conducted using design science research and focuses on the Agile software development methodology, prototyping, ISO 9241-210, ISO 9241-11, User-Interface design and the importance of communication and feedback. The identified methodologies, frameworks and processes were utilised during the creation of the artefact to determine the various influences, advantages and disadvantages of the above stated methodologies, frameworks, and processes. The identified methodologies, frameworks and processes contributed significantly to the successful re-engineering of the ERP system. The identified shortcomings of the previous legacy system were identified and the requirements were determined while working closely with stakeholders. The artefact addresses the shortcomings and expands on the functionality of the ERP system while continuously satisfying all the identified requirements.Hierdie studie is gemoeid met die identifisering en benutting van verskeie metodologieë, raamwerke en prosesse wat kan bydra tot die suksesvolle herontwerp van 'n Enterprise Resource Planning (ERP) stelsel vir die Instrument Maker Departement. Hierdie studie is uitgevoer met behulp van ontwerpwetenskapnavorsing en fokus op die Agile sagteware-ontwikkelingsmetodologie, prototipering, ISO 9241-210, ISO 9241-11, Gebruikerkoppelvlakontwerp en die belangrikheid van kommunikasie en terugvoering. Die geïdentifiseerde metodologieë, raamwerke en prosesse is tydens die skepping van die artefak gebruik om die verskillende invloede, voordele en nadele van die bogenoemde metodologieë, raamwerke en prosesse te bepaal. Die geïdentifiseerde metodologieë, raamwerke en prosesse het aansienlik bygedra tot die suksesvolle herontwerp van die ERP-stelsel. Die geïdentifiseerde tekortkominge van die vorige nalatenskapstelsel is geïdentifiseer en die vereistes is bepaal terwyl daar nou saam met belanghebbendes gewerk is. Die artefak spreek die tekortkominge aan en het die funksionaliteit van die ERP-stelsel uitgebrei terwyl dit deurlopend aan al die geïdentifiseerde vereistes voldoen word.RESEARCH Proposal Chapter 1Introduction This study involves the investigation of various frameworks, methodologies and processes that aid in the re-engineering of an Enterprise Resource Planning (ERP) system. Re-engineering an ERP system will aid in the reduction of time spent on various processes within a micro-enterprise. A case study will be utilised in order to create an environment in which various frameworks, methods, and processes can be implemented and tested.In this chapter, an overview of the study and the approach to formulating and solving the research question will be provided. Background context will be provided such as research relating to the field of study, what some of the gaps in literature were, and description of the research environment.The following section will provide an overview of the paradigm used along with the various other methodologies as well as a brief description of the aims and goals of this study. The section will also provide information on the various stages of the development lifecycle along with the various technology stacks used to design and develop the system.Background to studyIn order to effectively re-engineer a system, this study will conduct extensive research that will determine how frameworks, methodologies and processes function, and what frameworks, methodologies and processes should be used when re-engineering a system. These frameworks, methodologies and processes serves as a key factor in the success of information systems.What is an ERP system?An Entity Resource Planning system is a type of software that tries to cooperatively integrate all of the enterprise’s functional units (Abd Elmonem et al., 2016). Klaus et al. (2000), asserts that an ERP system can be viewed as a key component, within the company’s infrastructure, that produces solutions for the corporation. These solutions aim to combine all of a company’s activities and services in order to give a holistic view of the company. Abd Elmonem et al. (2016) states that ERP systems have undergone a lot of evolution in conjunction with the upgrading of processes over time in order to improve their functionality and integration capabilities. Abd Elmonem et al. (2016) provides the following benefits of ERP Systems:Lower upfront costsLower operating costsScalabilityImproved accessibility and usabilityRapid implementationRe-engineering of systemsValverde et al. (2012:3) states that people and processes interact in a complicated way in an Enterprise Information Technology system. Solutions for managing the complicated Information Technology (IT) landscape do not exist solely in the realm of technology. One of the most difficult scenarios many businesses face today is maintaining and modernising outdated systems. They are grappling with the challenge of upgrading these systems while maintaining day-to-day operations. Legacy systems, despite their age, continue to provide a competitive advantage by supporting unique business processes and storing priceless knowledge and historical data (Valverde et al., 2012).Frameworks architectureValverde et al. (2012:4) asserts that companies must consider merging web-based applications with their existing applications as Web Technology evolves. In the mainframe, service-oriented architecture (SOA) can be utilised to integrate the systems. Web-based applications running on an application server become service consumers, while mainframe programs become service providers. SOA alone is not sufficient enough to achieve business agility. Managing the complexity of the applications that power the services is burdensome. The following are the characteristics of this approach’s solution framework:Modular and pluggable for architecture business and system component integration;  Reuse in terms of design and code patterns;Use model-driven approach and code generation in the development process;  Test infrastructure for unit testing, component integration testing and service testing; and  Adapt an agile development process.Software architectureAccording to Valverde et al. (2012:4), it is not difficult to program a single module for a set of independent functions. In fact, a skilled programmer may produce a substantial amount of code in a short period of time. When thousands of programs must work together to fulfil business operations, various problems can occur. Maintenance becomes a challenging task. Adding more modules to the system would add to its complexity and exacerbate the problem. To enable business and IT agility, the entire complexity of the IT system must be resolved and controlled. It is necessary to have the correct software architecture. Netherwood (2010) states that architecture is essential because it (cited by Valverde et al., 2005): Controls complexityEnforces best practices Provides consistency and uniformityCommunicates skills neededReduces RisksEnables re-useValverde et al. (2012:5) further asserts that architecture is described to be the rules, heuristics and patterns governing:Partitioning the problem and the system to be built into discrete pieces Techniques used to create interfaces between these piecesTechniques to manage overall structure and flowTechniques used to interface the system to its environmentAppropriate use of development and delivery approaches, techniques and tools.Valverde et al. (2012:5) further expresses that methods, standards, tools, frameworks, policies, and management directives are all part of an architecture. A proper architectural design, together with its supporting infrastructure, is important to an IT project’s success.Agile Development ProcessOne of the primary goals of re-engineering an existing IT system, as stated by Valverde et al. (2012), is to increase business and IT agility. Scott, cited by Valverde et al. (2012:6), asserts that software development is approached in an evolutionary and iterative manner through the agile development process which promotes the focus on adaption to change. The notion is a good fit for increasing business and IT agility. Concrete requirements are identified as the development process progresses through successive prototype implementations in an agile development methodology (Valverde et al., 2012).Database assessmentFong (2021:7) states that because of the recent rapid advancements in database technology, more DBMS are being installed in a variety of enterprises. Many firms must convert to a new technology in order to compete, save costs, and standardize operational procedures. This led to the conclusion that a strategy for assessing the quality of transformed databases is required. The following criteria are drawn from software engineering and database technology requirements:Integrity - To ensure domain integrity, only syntactically and semantically valid data should be saved in databases.Trace-ability – An intuitive database design should support trace-ability throughout the entire projectConsistency - Data is frequently replicated in distributed database systems to improve performance and availability.Correctness - A database is correct if it accurately describes the external objects and processes it is meant to represent.Completeness - When a database schema represents all important features of the application domain, it is said to be complete.Efficiency - If a database schema can handle any processes on the component schema and provides both timely and accurate data access for a given set of queries and transactions, it is considered an efficient design.ConclusionThis section describes some of the key factors that aid in the re-engineering process of information systems. Valverde et al. (2012:4) states that technology is ever-changing and advancements in software development occur frequently. Consequently, the methodologies and frameworks that contribute to the success of re-engineering should be frequently evaluated and revised to ensure that it meets industry standards. This begs the question, what methodologies, frameworks and processes should be used during the re-engineering of information systems.Problem statementEstablished in 1952, the instrument-maker department of the North-West University has since grown exponentially. The instrument-making department is classified as a specialised academic service. They are responsible not only for their role in the development of specialised scientific and mechanical equipment, but also boasts a scientific glassblowing facility. They offer their expertise in design and manufacturing of research equipment. Not only that, the instrument-making department also service and repair scales, microscopes and various other equipment.In 2021, the Instrument-making department approached the BMI centre to request the design and development for an ERP System that would help reduce some of the tedious and repetitive tasks that takes place within the department. These tasks range from generating quotes for projects, managing labour hours of staff, and managing the stock required for projects.Unfortunately, the system designed by the BMI centre did not satisfy all the business requirements specified by the head of the department and various features do not work as intended. Some aspects of the user interface are not in line with industry standards and the complexion of some functions are too high for a standard user to utilise. Because of this, the staff have resorted to previous practices which are highly inefficient and which lead to valuable time being wasted. This has led to the conclusion that staff members find the current system to be too complicated to utilise all of its functions and that proper training on how to use the system should be a requirement for all employees before using the system. The head of the department has stated that the ability to update key values within the system should be a priority as the previous system did not allow it. In addition, the head of the department has also expressed his interest in the design of a mobile application that would enable his employees to record time spent on various activities such as working hours, lunch or a custom activity unique to the employee.In order to address these problems, an attempt to re-engineer the previous ERP system created by the BMI centre in order to address the various problems described by the head of the department and to successfully incorporate all the business requirements.Paradigmatic perspectiveTo successfully and effectively conduct the research required for this paper, research will be conducted according to an interpretivist based approach, while utilising the guidelines and framework laid out in the research paradigm known as Design Science in Information Systems.Research paradigmA research paradigm, is a theoretical framework which influences the way in which a researcher analysis information and draws conclusions based on the research conducted (Mackenzie & Knipe, 2006). Paradigms are crucial because they supplement beliefs and dictates what should be studied, and how the interpretation of the results should be conducted (Kivunja & Kuyini, 2017:27).According to Guba and Lincoln (2005:193), a paradigm consists of three important elements. These elements are known as epistemology, ontology, and methodology.Epistemology originated from the Greek word episteme, which means knowledge. Simply stated, in terms of research, epistemology is utilized to explain how individuals know something, and how we understand reality and facts (Kivunja & Kuyini, 2017:27) Scotland (2012:5) asserts that Ontology is concerned with assumptions that constitutes what is reality, in other terms, what we are perceiving. Researchers must take a stand on their perceptions of how things are and how they work in the real world.The third and final element is methodology. Keeves (1997:18) states that the term methodology, is a comprehensive phrase that refers to the study design, methods, approaches, and processes utilized in a well-planned investigation to learn something new.In conclusion, a research paradigm is essential when conducting research as it serves as the backbone of our thinking. As a result and based on the type of research that will be conducted, this study will utilise Interpretivism and Design Science as the research paradigm.InterpretivismInterpretivism is inherently a qualitative research method which utilises data recorded by the researcher from first-hand observations, interviews, questionnaires, case studies, and artefacts (Creswell & Guetterman, 2018). These factors will provide various advantages during this study such as:First-hand experience involving the various business processes and environments in which the employees partake.The ability to receive feedback from employees when prototyping the artefact.Creates an environment in which the research that will be conducted can be implemented and tested within a case study.Supports the creation of the artefact that will be re-engineered and aids in the evaluation of said artefact.Design ScienceHevner et al. (2004:76) stated that Design Science has hugely been influenced by the fields such as engineering and artificial intelligence. At its core, Design Science is believed to be a problem-solving paradigm that enables its users to creatively develop innovations that define the ideas, methods, technical capabilities, and products that may be used to effectively and efficiently analyse, design, implement, manage, and use information systems.Design science aims to solve various problems while strongly relying on characteristics such as creativity and persistence. The results of various studies are uploaded within the knowledge base and thus become best practices for others to use (Hevner et al., 2004:76). In short, design science research in information systems attempts to address various problems that contribute to the failure of information systems.These various problems are characterised by aspects such as unstable requirements and restrictions influenced by ill-defined environmental circumstances, or the dependence of various human cognitive and social abilities such as creativity or teamwork (Hevner et al., 2014:78)Design science provides us with 7 different guidelines to follow that will aid in our research endeavours. These guidelines are based on fundamentals such as knowledge and understanding of the problem. Subsequently, solutions to various problems can be derived during the creation of the artefact (Hevner et al., 2004:82). In short, the guidelines are as follow: Design as an ArtefactThe outcome of design-science research in IS is to address a crucial business problem by developing an artefact. The artefact should be documented thoroughly to aid with the implementation and application within the specified environment. The implementation of the artefact will provide insight into the feasibility of the design process and the various effects of the ERP system. As a result of this guideline, a case study will be conducted within which the ERP system will be re-engineered in order to increase its efficiency.Problem relevanceThe goal of information system research is to gain knowledge and insight that will allow the development and implementation of technology-based solutions to previously unresolved and significant business issues. In terms of our study, the problem encountered is to determine what processes and frameworks should be followed to effectively and efficiently re-engineer the ERP system to meet the business requirements. The current ERP system fails at reducing the administrative burden that staff members face and does not increase the efficiency of the department.  Subsequently, the case study will aid our research endeavours by providing an environment in which we can test and implement various frameworks and processes in order to determine the most effective way of re-engineering the current ERP system to solve the business problem. Design EvaluationIt is crucial to exhibit the effectiveness and efficiency of the artefact with the aid of proficient evaluations methods. In terms of this study, the various processes and frameworks used to re-engineer the system will be evaluated in conjunction with the artefact. The artefact should be evaluated based on the level of effectiveness and solutions it provides to the requirements supplied by the head of the department. The processes and frameworks will be evaluated based on the overall performance of the artefact when implemented in the case study. The evaluations will be conducted by members of staff from the Instrument maker department to provide their opinion.Research contributionsEffective design-science research must provide a significant contribution to the design artefact, design construction knowledge, or design assessment knowledge. In terms of this report, various journal articles will be reviewed to establish factors that contribute the success and failure of projects. These factors will be noted and incorporated during the re-engineering of the ERP system and later re-evaluated and documented for future use.Research RigorIn both the development and evaluation of the intended artefact, research in design science necessitates the use of rigorous techniques. The efficient utilization of knowledge base foundations and research procedures will enable the creation of a rigours system. The foundation of this study will be based on the research of various processes and frameworks that will be implemented during the re-engineering process.Design as a search processDesign science is innately an iterative search process that aids in the discovery of an effective solution to the problem. In thus study, research will be conducted in order to identify which processes and frameworks will be the most effective in aiding with our development and research of the ERP system.Communication of researchDesign-Science research must be presented to audiences in both the technical and management fields with relation to the study. At the end of this study, the discoveries made, and the developed artefact will be presented to the management and technical audiences that form part of the project.Research aim and objectivesResearch aimThis study aims to re-engineer the ERP system used by the Insturmentmaker department in order to reduce the time spent on administrative duties.Research objectivesPrimary objectivesThe primary objective is to re-engineer the ERP system by identifying, researching and integrating frameworks, methodologies and processes that can aid in the development life cycle.Theoretical objectivesThe following theoretical objectives have been identified in order to aid in the accomplishment of the primary objective:Understand how Design Science can aid in our research endeavours.Identify and understand frameworks that can aid with the re-engineering of the ERP systemIdentify and understand design methodologies that can aid with the re-engineering of the ERP SystemUnderstand how the previous ERP system works and what its shortcomings wereEmpirical objectives The following empirical objectives have been created in conjunction with the primary objective:Re-design the user interface to increase its effectiveness and usability in order to minimize the time spent when using the softwareMigrating the current systems to an online platform for easy use and accessibility.Re-design backend functions that do not satisfy the specified user requirementsProvide various methods of data validation and verificationEnsure the integrity of data storedProvide the ability to Insert, Update and Delete, various data values such as types of services, stock prices, and wages, among other things. Increase the functionality of the labour management system by incorporating the newly established business requirementsApproach to project management and project planThe goal of this project is to re-engineer the ERP system used by the Instrument maker department in order to reduce the administrative burden on employees. This will be achieved by researching the various processes and frameworks that contribute to the success of information systems. Subsequently, the project is divided into two phases, the first phases consist of compiling various journal articles, literature studies, and the in-depth documentation of the artefact being developed. The second phase is concerned with documenting the creation of the artefact while referencing the various steps and procedures described within the project lifecycle.Scope	Project requirementsThe Insturmentmaker department requests that their ERP system be re-engineered because it fails to effectively reduce the workload of staff members. As such, the following requirements have been established:The ERP system should lower the amount of time spent on administrative work.The head of the department would like to have the ability to Update, Insert or Delete various types of jobs that employees complete.Introduction of staff performance measures.An android application to enable staff members to perform small tasks such as fulling in work hours or creating new projects.The ability to accurately store time sheet dataAn effective way of managing/removing duplicate projectsThe design of a more streamlined interface which is effective and easy to use when creating quotations The ability to Insert, Update or delete new labour ratesA rework of the supplier and stock functions to allow the ability to store different quotes based on suppliers.Development PlatformThis section will discuss the development platform that will be utilized during the development cycle. The main web application will be developed using Visual Studio and written in ASP.NET MVC. The coding languages JavaScript, PHP, HTML5, and CSS3 will be used in conjunction with ASP.NET MVC to aid in various different front-end development processes. The system will also require a database to function properly. The database will be hosted on an Amazon Web Service.LimitationsTimeThis project takes place within the year 2022, with the starting date being the 21st of February. The project planning and research proposal must be submitted on the 21st of April, followed by the literature study on the 30th of June. The first demonstration of the artefact along with the poster will be on the 20th of October, and the final submission of the complete document is on the 27th of October.Risk analysisIn this section, the risks and the various impacts that they can have on the business will be discussed. The first risk is concerned with overrunning the budget during the re-engineering of the ERP system. The probability of this risk occurring is low and the severity of the effects on the business if it occurs is moderate. The second risk is concerned with failure to complete the project within a given time. The probability of this risk occurring is perceived to be low but the consequences this risk will have on the business, if it occurs, is high. The third risk is concerned with the technical complexity of the ERP system. This is a very low-level risk which could have moderate effects on the business.Table 61: Risk Analysis table Project PlanFigure 61 :	Project Development Gantt chartRigour / Validity & reliabilityHevner et al. (2004:80) asserts in the second guideline that functionality, completeness, consistency, accuracy, performance, reliability and other important qualities can all be assessed when it comes to IT artefacts. In this study, the assessment of the artefact will be conducted in the form of a case study. The case study will utilise dummy data which closely simulates data used within the Instrument maker department. This simulation will aid in determining the validity of information that the artefact produces. During the testing phase, the artefact will be refined in order to accurately produce and safely store the relevant data within the database. The opportunity for feedback will be given to stakeholders in order for them to evaluate the performance and effectiveness of the artefact.  Ethical considerationsIn the following section, the ethical principles and legal implications that can be found within this study will be discussed. The following table contains ethical principles, based on the guidelines set by the National Statistician’s Data Ethics Advisory Committee, which govern the use of data during this study:Table 81: Ethical PrinciplesPreliminary chapter divisionChapter 1: IntroductionThis chapter describes the problem under investigation as well as the research and system development approaches that will be used in the project plan to meet the aims and objectives established by the research question posed.Chapter 2: Literature StudyPresentation of in-depth research on the research question as well as potential solutions to the question by evaluating various other journal articles and studies that relates to the research question.Chapter 3: Documentation regarding the artefactThe artefact's documentation comprises a full description of the processes taken to create it, as well as the system development methodology and the various frameworks utilised in the development cycle.Chapter 4: Collecting, processing and presentation of dataDescribes the procedures for gathering, processing, and generating the information that will be provided to staff members via the created ERP system. This section will also contain information obtained during the case study, interviews and feedback based on prototyping.Chapter 5: ResultsThis chapter aims to address the research question posed at the start of this study by referring to the various frameworks and methods gathered in the literature study and the information stated in Chapter 4Chapter 6: ConclusionEntails the conclusions from the study’s findings. This chapter will demonstrate that the research question has been addressed through achieving the goals and objectives identified.Executive SummaryThe Instrument maker department of the North West University requests the re-engineering of their entity resource planning system as it is currently ineffective at reducing the time spent on administrative work. The head of the department has specified various processes and functionalities that require re-engineering such as monitoring the performance of employees and accurately storing of measurements and other data captured by various business processes. The current ERP system will be re-engineered and migrated to an online application for easy accessibility. The main goal of this study is to identify the frameworks, methodologies and processes that will aid in the successful re-engineering of the ERP system to lower the amount of time spent on administrative processes. A case study will be utilised in order to simulate in environment that mimics the Instrument maker department in order to implement and test the artefact that will be designed.Literature studyChapter 2IntroductionThis chapter entails a literature study that will focus on a broad spectrum of factors that contribute to the successful re-engineering of an ERP system. The study will focus on identifying and utilising methodologies, frameworks, and various processes that software developers can utilise to successfully re-engineer applications. The information identified will be utilised during the creation of the artefact. Re-engineering follows nearly identical processes in relation to normal software development and thus the study will focus on the software development cycle as a whole.To answer the research question, the first step is to identify what factors are contributing to the failure of software applications as a whole. The first factor that will be researched is user interface design. The user interface as a whole is constantly being used by end-users and contributes tremendously to the overall acceptance of software applications. Next, we will look at feedback from end-users and their involvement during the software development cycle. Feedback can be viewed as a critical source of information in conjunction with client interactions to increase the understanding of business requirements. The next part of the study will then focus on prototyping which strongly relates to feedback. The subsequent part focuses on an approach that can be utilised to migrate a legacy system to a web application. The final section consists of information regarding the Microsoft Power Platform as an approach to re-engineering. All the identified information is relevant to the creation of the artefact and can increase the successful re-engineering of a software application. This project contributes mainly to the field of Computer Science and Information Technology. The entire software development process is comprised of methodologies, processes and frameworks of which this study aims to identify crucially important ones.  User Interface designIn this section, all aspects relating to the design of an intuitive and user-centred interface will be discussed in detail.  User Interface design is a large part of the re-engineering and software development fields and its acceptance can make or break a project. It is thus important that the subject be researched in order to understand how to effectively design interfaces with end-users in mind.Importance of user interface As technology became cheaper and easier to produce, more people have started using it in their daily lives. Technology such as cell phones and personal computers are being used by individuals on a daily basis to communicate and perform various tasks. The study of how individuals interact with computer systems is known as Human-Computer Interaction (HCI). Various disciplines such as psychology, graphic design and computer science contribute to the ongoing study of HCI. Individuals interact with computer systems through the User Interface (UI). (Stone et al., 2005) Computer applications contribute significantly to our daily lives without many people truly understanding the impact it has made. The UI is an essential component that enables users to interact with computer applications to achieve their goals. Each UI will differ from application to application depending on the functionality and type of application/system. For example, when using a personal computer, the individual will use a mouse and keyboard to interact with the user interface of the application. When using a cell phone, a touch screen will be utilised. Various applications will have different interface designs unique to their functionality. In terms of the UI, the application will either be suitable or unsuitable, considering how well the interface was designed. (Stone et al., 2005) As stated earlier, a good UI design is important because of the extensive use of computers in our daily lives. In the past, when computers were still expensive, only certain professionals had access to computers. Early UI design consisted of command-line interfaces, which even to this day, required the user to have extensive knowledge of how to use the application. A large amount of time will be spent on understanding and learning how to use the application. However, since the decrease in prices and widespread increase in computer usage, professionals are no longer the primary users of computer systems. Subsequently, the subject of design and development of user interfaces for various people, in various environments, with different goals and abilities has risen. The success of UI design depends heavily on how easy it is for users to learn, use, and achieve their goals when utilising the application with minimum frustrations. (Stone et al., 2005)What is considered a good UI design? A UI is considered to be of high quality when the interface promotes an easy, natural, and engaging interaction between the system and the user that enables the user to seamlessly complete their goals (Stone et al., 2005). General terms to describe a user interface are comprised of words such as good or bad. These words are subjective and can be used to describe the various aspects of UI design such as whether the colour scheme used is a good choice or whether the layout looks bad. Our main focus is whether a user interface is exceptional, mediocre or poor concerning its usability. What is Usability? To effectively describe the term usability in relation to HCI, our attention now turns to the standards published by the International Organization of Standardisation (ISO). ISO is an international standard development organisation which develops and publishes international standards (ISO, 2022). These standards allow companies to create competitive products and services at a high quality. ISO standards cover a wide variety of topics that relate to the development of software. The following section will focus more specifically on ISO 9241 which consists of the ergonomics of human-system interaction.ISO 9241-11:2018: Definitions and conceptsISO 9241-11:2018 offers a blueprint for comprehending the idea of usability and putting it to use with interactive systems, other types of systems, products, and services. The following definitions, as described in the guideline, are noteworthy concerning this study: Effectiveness“Accuracy and completeness with which users achieve specified goals.”Efficiency“Resources used in relation to the results achieved. Typical resources include time, human effort, costs and materials.”Satisfaction“Extent to which the user’s physical, cognitive and emotional responses that result from the use of a system, product or service meet the user’s needs and expectations.”Accessibility“Extent to which products, systems, services, environments and facilities can be used by people from a population with the widest range of user needs, characteristics and capabilities to achieve identified goals in identified contexts of use.”User experience“User’s perceptions and responses that result from the use and/or anticipated use of a system, product or service. Users’ perceptions and responses include the users’ emotions, beliefs, preferences, perceptions, comfort, behaviours, and accomplishments that occur before, during and after use. User experience is a consequence of brand image, presentation, functionality, system performance, interactive behaviour, and assistive capabilities of a system, product or service. It also results from the user’s internal and physical state resulting from prior experiences, attitudes, skills, abilities and personality; and from the context of use”.Usability“Extent to which a system, product or service can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use.”The relevance of usability:Regular ongoing use, to enable users to achieve their goals effectively, efficiently and with satisfaction;Learning, to enable new users to become effective, efficient and satisfied when starting to use a system, product or service;Infrequent use, to enable users to be effective, efficient and satisfied, with the system on each reuse;Use by people with the widest range of capabilities;Minimizing the risk and the undesirable consequences of use errors; andMaintenance, in that it enables maintenance tasks to be completed effectively, efficiently and with satisfaction.Usability is relevant when designing or evaluating interactions with a system, product or service for the purpose of:Development;Procurement;Review or comparison; andMarketing and market researchUser-centred design According to Stone (2005), user-centred design can be viewed as a technique that can be utilised during interface design and development. The technique aims to involve the end-users continuously throughout the duration of the interface design process. User-centred design focuses on understanding the end-users who will utilise the system in conjunction with understanding the tasks and environments concerning the end-user performing tasks. These environments can range from the end-users home to the office/workspace of the end-user. Stone further asserts that utilising a user-centred design approach will likely increase the application’s usability.ISO 13407, published in 1997, is an earlier publication that focuses on Human-Centred Design Processes for Interactive Systems. This standard stated that HCD was based on the following four main principles:The continuous involvement of end-users;A suitable distribution of function between end-users and the system;The iteration of design solutions; andMultidisciplinary design teams.HCD involves the following critical activities as described by ISO:Comprehend and categorise the context of use;Identify the intended  end-users and specific organisational demands;Utilise prototyping; andReview requirements and other feedback with the end-users/clients.Stone (2005) argues that the utilisation of standards such as ISO 13407 will ensure that the user experience will form part of the HCI development process. As discussed earlier in the usability section, ISO standards cover a wide variety of topics. For this section, we will turn our attention to ISO 9241-210. The main focus of this standard is human-centred design for interactive systems, which acts as a guideline to ensure usability, effectiveness and efficiency.ISO 9241-210: Human-Centred design for interactive systemsThe standard provides requirements and recommendations for human-centred design principles and activities throughout the entire development lifecycle. The standard decidedly recommends that this guideline should be utilised by employees in managerial positions. The standard is concerned with ways in which both hardware and software components, in relation to computers, can enhance human-system interaction.According to ISO (2019), Human-centred design is an approach to interactive systems development that aims to make systems usable and useful by focusing on the users, their needs and requirements, and by applying human factors/ergonomics, and usability knowledge and techniques. This approach enhances effectiveness and efficiency, improves human well-being, user satisfaction, accessibility and sustainability; and counteracts possible adverse effects of use on human health, safety and performance.The guideline provides the following definitions of frequently used terms:Human-centred designApproach to systems design and development that aims to make interactive systems more usable by focusing on the use of the system and applying human factors/ergonomics and usability knowledge and techniques.Ergonomics human factorScientific discipline concerned with the understanding of interactions among humans and other elements of a system and the profession that applies theory, principles, data and methods to design to optimize human well-being and overall system performance.ISO (2019) asserts that utilising a human-centred approach to design and development has substantial economic and social benefits for users, employers and suppliers. Highly usable systems and products tend to be more successful in both technical and commercial aspects. Highly usable systems can aid in the reduction of costs associated with support when users can understand and use products without additional support. The following list entails examples in which the use of human-centred methods improved the overall quality:Increasing the productivity of users and the operational efficiency of organisations;Being easier to understand and use, thus reducing training and support costs;Increasing usability (effectiveness, efficiency and satisfaction)Increasing accessibility;Improving user experience;Reducing discomfort and stress; andContributing towards sustainability of objectives.ISO (2019) argues that the utilisation of an HCD can aid various aspects of the development lifecycle. Additionally, this approach can increase the likelihood of successfully completing the project on schedule and within budget. Utilising the correct human-centred methods can reduce the likelihood of the project failing to meet the stakeholder requirements or being rejected by the end-users.The following table contains examples of various results from HCD activities:Table 21 Examples of results from human-centred design activitiesInvolving end-usersThe views and opinions of end-users can provide vital information about their experience while utilising the system. Various strategies can be performed to obtain results and feedback from users. These strategies can range from simply observing employees in action at work to performing psychological-based user-modelling techniques or including a user representative in the design team. In addition, it is immensely important for end-users to partake in the testing and evaluation phases of the development cycle (Stone et al., 2005).Figure 21 The star life cycleThe development cycle consists of various phases of design and development (Stone, 2005). Stone argues that the cycle should be an iterative process to include end-users in the process while being able to utilise various knowledge areas and expertise. The figure above is known as the star life cycle which was proposed by Hix and Hartson in 1993 (Cited by Stone et al., 2005).It is a well-known fact that the star life cycle promotes iteration (Stone, 2005). In reference to the figure, evaluation is at the centre of the star life cycle to represent the continuous evaluation that takes place during different phases of the development cycle. Evaluation is concerned with gathering feedback and responses from end-users. This can be achieved in a myriad of ways such as through feedback reports, interviews, questioners, and by observing end-users in their respective environments. In addition, Hix and Hartson (1993) assert that the star life cycle can be utilised equally in various development strategies such as top-down and bottom-up approaches (Cited by Stone et al., 2005).Stone (2005) provides the following examples of involving end-users during the different development phases:Early in development during requirement analysis: End-users can aid by providing requirements and discussing the problems encountered with legacy systems. The best time to observe employees is during this initial period and will provide important information such as the technical skills of the intended end-users.During prototyping: Testing prototypes on end-users will enable them to provide feedback based on their experiences with the computer system and other metrics such as performance capabilities. During the final testing and optimisation period: This presents end-users with an additional opportunity to test the final product with the aid of surveys or questionnaires. Considering that this stage takes place at the end of the cycle, only minimal changes should be made relating to the additional end-user feedback.During training/post-delivery of product: During the training phases, the development team will be able to gather more feedback based on the user’s experience so far in addition to gathering reviews and feedback for future iterations.The importance of client involvement during the various development stages cannot be understated. Developing a usable, effective and efficient interface relies strongly on the involvement of end-users. Creating an interface that is widely accepted by end-users will significantly contribute to the successful re-engineering of an ERP system. There exist various standards and methodologies that can aid developers during the re-engineering process such as ISO and User-Centred design. These methods are fairly popular and can be viewed as best practices.Feedback during developmentAs stated earlier, feedback is an immensely important subject concerning the successful re-engineering and development of applications. Feedback can provide valuable perspectives from end-users and serves as a communication channel between the development team and clients. Specific feedback activities are continuously mentioned in sections throughout this study.According to a blog post written by Daly (2016), gathering and analysing feedback provided by users is what makes agile software development lean. This engagement promotes a constant need to release early and develop software with end-users in mind. The results provided by user feedback can be utilised to better understand how to add more value to the software and how to improve user satisfaction.In addition to utilising general feedback practices, such as surveys, questionnaires and interviews, Daly (2016) argues that releasing a prototype version to a small group of users early on will increase the quality of feedback being received. This will enable employees to maintain the team's laser-like focus on the incremental value they could contribute by implementing a relatively narrow feature set that was founded on research and first hypotheses (Daly, 2016).Kreisber (2020) argues that customer feedback is extremely valuable for software development. Without client feedback, it would not have been possible to optimise the user experience of the software that is being developed. During both the discovery and validation phases of software development, this information is very crucial. Kreisber (2020) states that customer input will provide the following advantages:Improved qualityA developer can enhance the quality of their software by paying attention to what their consumers have to say. Consumer input will help produce the best product at every level of development, but notably in the early stages.Identify issuesAs a result of client feedback, developers will be able to pinpoint software problems. Perhaps there is a bug that makes using the system unpleasant. Developers can present a more refined product when they work with their clients to identify problems with their software.Higher customer satisfactionCustomers appreciate knowing that their concerns are taken seriously. They will appreciate that developers used their feedback to improve the software. Customers should feel valued and have their comments taken into consideration by developers. The customer will feel more invested in the software development process and are more likely to remain a customer in the long run.Better product decisionsWhen a developer carefully considers customer feedback, they facilitate the growth of their business. This is because developers get to improve their software and stay ahead of the competition in terms of functionality and user experience.Kreisberg (2020) asserts that listening to customer feedback during the development will promote better decision making throughout the entire life cycle. The main takeaway is that developers can boost sales, promote more efficient development, and build stronger relationships with their clients when they pay attention to the feedback provided.Feedback is another crucial method that will be utilised during the development of the artefact. As stated earlier, the entire development process can benefit from constant feedback. This will ensure that all the requirements specified are sufficiently satisfied.PrototypingSoftware prototyping is an activity that involves the creation of a software application that closely mimics the final product but with less functionality to test specific aspects. A prototype can be vastly different from the final product. Prototyping in software development closely relates to prototyping in mechanical engineering. The utilisation of prototyping can yield several advantages that contribute to the successful completion of the software development cycle (Martin, 2022). As stated earlier, prototyping will enable developers to gather feedback and the ability to compare solutions to the business requirements. Developers will be able to estimate whether or not deadlines and milestones will be met concerning the scope and budget (Grimm, 1998).According to Pacific Research Laboratories (2021), prototyping consists of 5 distinct phases namely: Define the visionIn the initial starting phase, it is crucial for developers to determine their vision for the software solution. The activities in this phase can range from diagrams and framework architectures to technical and feasibility documents. Examples of important questions to ask during this phase:What problems will the solution solve?Who is this software intended for?What other options are availableHow much development time is required?What is the estimated cost of the project?These questions in conjunction with the overall vision and activities can produce critical information regarding the success and performance of the software solution.Focus on key featuresA common mistake that occurs during development is developers developing a prototype identical to the end product containing all of its functionality. Developers should instead identify key features that require testing, such as the usability of the user interface or certain functions that enable employees to complete tasks. Some features can be viewed as less essential when in relation to prototyping.ProduceThis particular phase will consume the greatest time compared to the other phases. This phase consists of developing the actual prototype. According to Martin, the various types of prototyping models that exist are the following:Rapid throwaway prototypes Rapid throwaway is founded on the requirements established by clients. This type of prototype has a short development time and is utilised to visually represent some of the specified requirements. Customer input influences the revision of the requirements established in order for developers to improve the future prototyping versions. As a result of this method, a developed prototype is discarded after the required information has been obtained and has a small impact on the final prototype.Evolutionary prototypeAn evolutionary prototype is worked on and refined continuously in order to satisfy all the customer’s requirements. Feedback is crucial to successfully satisfy the requirements provided. This type of prototyping will help save a lot of time during development as the same prototype is constantly being worked on instead of starting over for each iteration. This model can support developers when utilising new or unfamiliar technology stacks as well as the ability to test each individual software function.Incremental prototypeThis particular method takes the final product as a whole and individually categorises them for development as small prototypes. As the development cycle continues, these smaller prototypes are integrated within one another. This method can be utilised to reduce feedback time between end-users and the development team.Extreme prototypeExtreme prototyping is a method that is utilised during web development. The method consists of three phases namely:Basic prototype that consists of HTML pages.Simulation of processes using dummy data and services layers.The services are integrated within the final prototype version. Test and refineAfter the development and prototype showcase, feedback from users should be analysed in order to determine ways to improve the system. This phase will enable developers to test the functionality in terms of performance, usability and will provide various software metrics.PresentEach prototype will have a different purpose and thus the presentation stage will be different for each prototype iteration. For instance, a proportion of prototype iterations will focus on the usability experience of end-users, whereas others might serve as a functionality test.Martin (2022) encourages the following practices which to look out for during the prototyping phase:I developer should utilise prototyping when the requirements are vague;It is crucial to perform planned and controlled prototyping;Regular meetings should be held with clients in order to establish clear communications, milestones and deadlines;Prototyping should start early on in the development cycle;Clients should assess and approve prototype iterations;It is important to specify the goals of each prototype in terms of functionality and scope; andImportant features should be developed earlier on.Prototyping provides a wide range of developing solutions to problems encountered during the development phase. Martin (2022) argues that prototyping has the following advantages:End-users are continuously involved during the various stages of development. This enables developers to sort out any issues that may arise early on;Promotes effective communication between team members;Missing functionality can be identified;Incorrect functionality can be identified;Lowers the chance of software rejection;Identifies more challenging functions that need to be implemented; andPrototyping helps ascertain the customer’s needs.Prototyping is an effective method to involve end-users during the various development phases. Developers will be able to gain insight regarding requirements and various other specifications that contribute to the successful re-engineering and development of software applications. Prototyping will enable developers to fine-tune the system and ensure that it is functioning as intended. Prototyping will be utilised extensively during the development of the artefact.Approach to migrating legacy systems to web-based servicesThe following section consists of information in regards to an effortless approach to migrating from legacy software systems to web services as proposed by Valverde (2012). Some aspects of this approach will contribute to the development lifecycle of the artefact. This section suggests the utilisation of different methods to ultimately achieve the goal of transforming a legacy system into a new updated version.The reason for migration and reverse engineeringValverde (2012) asserts that a crucial reason for the reverse engineering of legacy systems is to make them inter-operable. The Oxford dictionary defines interoperability as the ability of computer systems or software to exchange and make use of information. The advancement of technology has made it increasingly simple to transfer and exchange information between systems. Valverde (2012) further argues that, as a result of advancements, new features and methods can be integrated into legacy systems with the aid of reverse engineering. A key example is the ability to utilise the web-based application from any location that has access to the internet. (Valverde et al., 2012)Regardless of the intent, as far as legacy software systems are concerned, reverse engineering is the initial process to utilise. Chikofsky (1990) states that reverse engineering is the process of analysing a specific system to understand the system’s components and develop a higher level of abstraction of the interrelationships (cited by Valverde et al., 2012) Djamel (2008) proclaims that with the increase in widespread accessibility of the internet in the current era, web applications is a rising solution to specific legacy systems. Web services are quickly becoming a promising technology for the development and use of software applications as well as the efficient automation of interactions between organisations (Cited by Valverde et al., 2012).Canfora (2006) states that by overcoming the limitations associated with interoperability, web services permit the integration of existing software systems by utilising the extensive infrastructure of the World Wide Web (WWW). This creates an opportunity to continue using established business functions and methods from legacy systems (Cited by Valverde et al., 2012). Fenton and Pfleeger (1997) argue that software metrics information is very useful when reverse engineering a computer system. A software metric is a quantitative measure that can be allocated to a system, component or process to determine its effectiveness and efficiency (Cited by Valverde et al., 2012). Systa (2000) claims that the maintenance and re-engineering of large software systems are known to be complex, time-consuming, and expensive. These activities consists of a certain degree of risk which relates to the task of program comprehension and understanding (Cited by Valverde et al., 2012).A proposed approachFigure 51 Framework deployed for migrationTable 51 Mapping deployed for migrationThe proposed approach kicks off with a simple mapping procedure of the legacy system to support the migration to web services. The approach requires a deep understanding of the legacy system at a higher level of abstraction. Cornella-Dorda (2000) asserts that these abstractions can be derived from an analysis of this system or its documentation. The modernization of legacy systems can be categorised into the white box and black box families. The initial family is based on the knowledge of the legacy system’s source code, while the latter does not require the analysis of source system code (cited by Valverde et al., 2012). A black box approach can utilise the framework shown above to provide a suitable solution.Bisbal (2009) proposed three categories of solutions, namely, redevelopment, wrapping and migration. These solutions are variably integrated within the method proposed by Valverde (2012), to provide an effective solution. Canfor (2006) defines wrapping as a black box modernization technique that can be utilised for the effective migration of legacy systems onto new platforms. This is achieved by encapsulating the original system with a software layer that replaces the original interface with a new modernised version (cited by Valverde et al., 2012).Valverde (2012) proclaims that in terms of software support for web services, .Net and J2EE are two of the best platforms that provide extensive support for web applications and web services. In addition, languages such as C++ and Javascript are easily integrated within .Net systems to further enhance their capabilities.The main goal of the proposed solution method is to retain the functionality present in legacy systems and with the aid of .Net and its various capabilities, it can be migrated to a web service. .Net provides the ability to visualise web services in an easy-to-understand manner and is compliant with a large sum of high-level languages. The main factor that determines the success of this method is the thorough understanding of the legacy system and its functionality to successfully map the different components, relationships and functionality. Zhou (2008) argues that considering the importance of software metrics in forward software development, it is safe to assume that software metrics can be equally as important for reverse engineering (cited by Valverde et al., 2012). The proposed solution attempts to incorporate software metrics to promote the effective migration from a legacy system to a web service. Although several metrics exist, only a select few will be utilised during the re-engineering process.The methods discussed above have been continuously improved and researched. The utilisation of these methods can aid in various development phases and provides valuable insight. As technology advanced, so did the need for easily accessible applications from different environments. This research contributes to the understanding of how to approach re-engineering challenges. Microsoft Power PlatformThe Microsoft Power Platform is a combination of applications that can aid developers in the automation of processes, creation of solutions, data analysis, and the ability to develop virtual agents. As a result of the increase in the flow of data, the concept of the Power Platform was envisioned to aid and support the various tasks and processes in relation to data. Power Platform is based on the idea that businesses may use data to their advantage and gather insights to power smart business processes (Paracha, 2021).Paracha (2021) asserts that the Power Platform consists of the following four major components:Power BIPower BI provides insights with the aid of interactive real-time dashboards that focus on the specific information required by users. Power BI provides the user with the ability to perform tasks and gain insight regardless of where the data is stored. Power BI combines and connects all the stored data in order to provide users with a collective view of the entire business.Developers can design and develop smart insights and combine them with decision-making processes to make the correct decisions based on the data supplied by the interactive real-time dashboard. Power BI includes a natural language query model that can be utilised to better understand the data and further mine information from the data.Power AppsThe philosophy behind Power Apps is to build applications that don't require months of work and extensive development. Users of Power Apps can create both extremely low-code and no-code applications. Power App is a very complex and intelligent type of application that incorporates the logic of your business and can be built with very little code. These programmes, along with the other Power Platform offerings, can be utilised on a variety of devices, including mobile phones running iOS or Android, laptops, tablets, desktops, and anyplace where you can access the internet.Developers can create highly personalised activities that can provide users with an immersive experience from starting with your data and data model and going all the way to the client’s business processes in addition to building model-driven or canvas apps that can be utilised across different platforms.Power Apps and the overall Power Platform heavily emphasise security. High enterprise security, administration, and control are available in Power Apps, and developers can manage them with Azure Active Directory to implement multifactor authentication settings. In essence, developers can manage your data through the admin centre, giving you the full experience to centrally manage your apps across your organisation as well as what has been deployed outside the organisation. Developers can have complete audit logs, use available analytics, or put data loss prevention policies in place.Power AutomateProcess automation is made possible by Power Automate, formerly known as Microsoft Flow, and allows for the elimination of simple manual activities as well as any potential for human error. Power Automate is an effective workflow automation solution that enables developers to link various systems and transform data. You can operate on several Microsoft systems and there is only one source of truth. With the aid of Power Automate, developers can create and automate business processes for all of your installed apps and services. These can range from straightforward automation to more complex situations like branch creation or having several trigger responses and trigger actions.Power Virtual agentsPower Virtual Agents are sophisticated virtual assistants that can converse and perform a lot of the tasks that developers might otherwise have to carry out manually or hire someone else to complete.Project Portfolio Management (2021) argues that utilising Microsoft Power Platform will yield the following advantages during the development cycle:Combine all the users’ business activities on a single platformIn the digital age, data is everything, thus it is essential to ensure that all of your data is correct and readily available to avoid departmental silos and process bottlenecks. You may combine all of your Office 365 applications with additional external data sources using Microsoft Power Platform's end-to-end capabilities to provide seamless administration of enterprise data. It provides developers with a complete 360-degree view of everything occurring within your project portfolio.Enhance data accuracy and valueWith the aid of Microsoft Power Apps, businesses may create custom apps with form fields that are tailored to their particular requirements. No matter the external data source or application, Microsoft Power Platform ensures that data flows smoothly with the aid of Power Automate. However, acquiring and using data is just the beginning. The ability to draw insightful conclusions from data and perform data-based activities in response is what gives data its true value. Power BI quickly creates all of those crucial visualisations so that businesses don't overlook opportunities within their initiatives.Streamlines process and improves overall business productivityPower Automate makes it possible to digitise and automate monotonous operations, freeing up the development team's time to concentrate on project-related activities that bring value.Brings extensive cost savingsAccording to a 2021 Forrester report, Power Apps and Power Automate save the cost and time of application development by 70%. According to a 2019 edition of the research report, organisations may easily remove any additional service subscriptions, such as vendor application subscriptions, thanks to Power Apps, which reduces licencing costs by over 50% for organisations. Microsoft Power Platform provides a plethora of cost benefits across the entirety of the project portfolio when adding in all the additional time and resource savings through user-friendly platforms and data.Simplifies compliance managementAs businesses continue to value the environment and social aspects more, there will be a greater need for accountability and compliance. However, staying current and making sure every procedure is followed can be difficult. Organizations can ensure that these procedures are being followed with Power Automate and Power Apps since they have total control over the data collection procedure and outcomes. As a result, showing compliance is significantly simpler, and adjustments are simple to make if compliance standards change.Streamlines reporting activitiesPower BI allows for the quick and easy generation of all required reporting, visualisation, and dashboards. Furthermore, after all operations are consolidated onto the Microsoft platform, reports can be filtered to take into account the precise input fields or requirements your team would require.Facilitates remote working and multi-device functionalityMany older apps lack the capacity to fully manage the integration of online and mobile applications. Microsoft Power Platform provides team members with the ability to remotely communicate with other team members. In addition, team members will be able to effortlessly gain access to a project regardless of their device.The use of Microsoft Power Platform will greatly reduce the time and effort required to re-engineer and develop software applications. It provides the ability to effortlessly migrated data from legacy systems along with certain functionalities and processes. Projects that are developed using Power Platform tend to be more successful and is supported by various other Microsoft services.ConclusionThis literature study focused on researching methods, frameworks and processes that can be utilised during re-engineering. The study focused on User interface design, feedback, prototyping and other methods discussed to utilise during the re-engineering process. The combined use of all these methods, frameworks and processes aim to positively influence the development cycle in order to effectively re-engineer a system. These methods will be tested during the development of the artefact. The development of the artefact will generate the knowledge required to answer the research question. Research has shown that there exists a vast amount of methods, frameworks and processes that can be utilised, but some will be more applicable than others considering each individual challenge and environment.In conclusion, this chapter has addressed the second part of the research paper which is concerned with identifying methodologies, frameworks and processes that can aid developers during the re-engineering process. This chapter provides insight into some of the methods available to developers and explains the fundamental need for these methods. The successful re-engineering and development of software applications via the utilisation the discussed methods can contribute greatly to the success of re-engineering.Chapter 3Artefact DocumentationIn this chapter, a thorough description of the artefact and its functionality is described, the various phases throughout the development cycle is discussed, and a description of the development of the artefact is provided. Artefact DescriptionThe utilisation of Design Science Research has aided in the identification of the various methodologies, frameworks, and procedures, which led to the successful development of a solution that consists of two applications. The first application will be utilised by management and provides the following functionalities: Quotation management.Project management.Timesheet management.Inventory management.Customer management.The second application will be utilised by the technicians of the Instrument Makers on their mobile devices and will provide them with the following abilities:Employee timesheet entry management.Project information.Figure 4 Solution FunctionsThe artefact is classified as an ERP system. Oracle provides the following definition of an ERP system: A form of software that is used by enterprises to manage routine business operations like accounting, purchasing, project management, risk management and compliance, and supply chain management. The artefact will aid the Instrument Makers in managing the various processes within their department. The artefact will aid with planning, budgeting, forecasting and the ability to generate performance and financial reports.Development Cycle documentationLegacy system analysisInitial, the development processes started by conducting a legacy system analysis of the previous system that was utilised by the Instrument makers. The initial assessment revealed that the application was written in visual basic, the application had a counter-intuitive interface, and the application was severely complex to utilise. An extensive review of the accompanying documentation took place in order to better understand how the application was supposed to be utilised. This is a good example of why it is important to supply sufficient documentation as it will aid users in better understanding how the application works and how to use it.Business Processes Further analysis of the documentation and application revealed the various business processes and functionality intended to be executed by the application. The following is a list of the business processes and functionalities identified: Quotations featuresQuote generation consists of using the following information:Captured dataList of materialLabour informationHours workedPurchased external componentsData Tables:QuoteFigure 5 Create a QuoteTable 5 Old quote input compared to new quote inputThe information is used by the application to find similar historic processes to aid in the calculation of costs. When a new quote is created, the use of inventory items will also be calculated. Management has the ability to generate reports based on quotes which can be viewed as a summary per quote which specifies:MaterialsLabourAdditional CostsMaterial costsLabour costsAdditional CostsTotal costsThis report/summary can be exported to an excel spreadsheet. Management can compare a quote to its actual value. This report compares the estimated costs and the actual costs for a specific project. Using the drop-down lists, it is possible to select a specific project and a matching quote.The result is a table with information on the total material cost, labour cost and additional cost for the specified project and matching quotation. When the export button has been the information in the table is stored in a user-specified directory in a Microsoft Excel spreadsheet format. This allows the user to perform additional calculations (such as Actual vs. Expected cost overrun) if needed.Inventory managementThe process initiates when a quote is accepted, the IM then determines if they have the required materials on hand. After the service has finished, the residual materials will be captured for stock-taking purposes. The stock-taking process starts with the counting of the current stock, the stock levels are then captured, and reports are generated that can be accessed at any given time to check inventory levels.Data tables:Stock takeInventory listQuantity usedBuying and storing of new inventoryThe process involves the create new stock bought form that has the following data entries:Table 6 Old inventory input compared to new inventory inputReportsThe legacy system provides the ability to generate reports based on the inventory on hand within the department. Labour processesThe labour process flow consists of assigning a technician to a job, capturing the hours worked on a project by an employee, and finally completing the assigned job. The data table utilised for labour processes is the Time Entry table.The form contains the following data entries:Table 7 Old Timesheet entry compared to new timesheet entryA report can be generated which will provide information on hours worked per project and hours worked per month. Furthermore, a report can be generated which specifies the income per month. This report calculates the total amount of money generated by projects.Admin functionsThe administration has the ability to create, update and delete records within the application. The administration is able to create the following records along with their data inputs:Table 8 Old Administration processes input compared to new processes inputFigure 6 Create Additional Cost ScreenFigure 7 Create Inventory Type ScreenFigure 8 Create Customer ScreenFigure 9 Create Employee ScreenFigure 10 Create Inventory Item ScreenFigure 11 Create Job Type ScreenFigure 12 Create Project ScreenFigure 13 Quotation Entry ScreenFigure 14 Create Stock Bought ScreenFigure 15 Create Stock Take ScreenFigure 16 Create New Supplier ScreenIn conjunction with creation, the administration can also update and delete all the respective records discussed above.Technician functionsThe application provides technicians with the ability to create records for the additional project costs, Time Entry and quantity used tables. The input consists of the following:Figure 17 Create Additional Cost ScreenFigure 18 Create Time Entry ScreenFigure 19 Create Quantity Material Used ScreenIdentified data structure compared to the new data structureTable 9 Identified Data Structure compared to new Data StructurePrototyping Data collectionThe first official prototype was demonstrated on 12/09/2022 to the head of the Instrument maker department and an end-user (referred to as the stakeholders going forward). During this demonstration, the various forms that have been developed were showcased and discussed in detail with stakeholders. This provided stakeholders with the opportunity to submit feedback and ask questions relating to development. Valuable information regarding data input was received and a new level of clarity was achieved. The quotation management features were redesigned based on the feedback generated from the first prototyping event, some data inputs were changed, and the SharePoint list was slightly modified. This is an example where the utilisation of Microsoft Power Platform was advantageous in development. The consensus was that development is progressing as expected and that the system will adhere to the requirements and successfully complete the required tasks.The second prototyping event took place online on 12/10/2022 and was attended by stakeholders of the Instrument maker department. In this meeting, the final new features were showcased, and a review of the solution took place in order to ensure that the requirements will be satisfied and that the redesign of the quotation management features of the solution has been implemented successfully according to the needs of stakeholders. The consensus was that the quotation managementThe life cycle followed and its different phases:The Agile Methodology Agile project management is currently one of the most popular techniques because of its versatility and progressive nature. It was introduced in 2001 by the Agile Manifesto, which was initially developed for software development. Agile project management evolved over time and became a popular choice for many project managers, regardless of the industry (KissFlow, 2021).Agile was chosen as the software development methodology because it enables developers to deliver superior quality products, increased customer satisfaction, increased flexibility and reduced risks (Wrike, 2022).Agile development lifecycleTable 10 Agile Development Process (Wrike, 2022).ConceptThe initial phase of agile development is known as the concept phase. In this phase, project stakeholders will formulate the scope, goals and requirements of the software application. Initially, a stakeholder meeting was hosted with the respective stakeholders of the Instrument Makers. In this meeting, the stakeholders described the various requirements and functionality that the application should satisfy and poses. Once a general understanding of the project scope, goals and requirements was established, a discussion concerning the legacy system took place in which various shortcomings and problems were identified. The discussion of the legacy system led to a better understanding of what stakeholders require their application to do as well as insight into why stakeholders are unsatisfied with the legacy system.InceptionThe second phase is known as the Inception phase, frequently referred to as the requirements identification phase, where stakeholders further iterate on the requirements, scope, and goals of the application. The development team can start working on the architecture as well as the development of the initial mock-up interface.During this phase, the design and development of the first interface commenced on Microsoft Power Platform. The interface was developed in accordance with the requirements established by stakeholders in conjunction with the feedback and analysis of the legacy system. Throughout this phase, frequent communication with stakeholders was maintained in order to ensure that the requirements and goals are fully understood and will be satisfied by the planned application.IterationThe third phase of the agile development process is known as iteration, frequently referred to as development. This phase is known to be the longest phase as it consists of most of the development relating to the solution. During this stage, the various requirements of the previous stages will be combined to develop the various iterations of the application. The iterations undergo several reviews and revisions to improve the application until the final iteration is produced. This ensures that the application being developed is in line with what stakeholders require.First iterationThe first iteration of the artefact consisted of two applications with the following functionalities:	Mobile application:Timesheet managementDesktop application:Quote managementProject management Timesheet managementCustomer managementThe first iteration was based on the various requirements provided by stakeholders. The iteration’s functionality was still being developed and expanded upon but provided stakeholders with a general idea of the artefact being developed. Stakeholders provided feedback on the first iteration during the first prototyping session. Stakeholders indicated that the Quote management functionality was slightly different from the requirements and did not fully satisfy their needs. Stakeholders requested additional functionality in the form of inventory management in relation to the desktop application as well as extended mobile application functionality which consisted of providing technicians with the ability to view information about the projects they are currently working on. Second iterationThe second iteration was refined and improved based on feedback provided by stakeholders during prototyping. Changes were made to the Quote management functionality as well as small adjustments to the timesheet management functionality. Small changes were made to the user interface in order to better satisfy the requirements and to create a more streamlined interface. The second iteration implemented the inventory management functionality. Various business processes, logic and business rules were implemented and refined. Small changes were made to the respective SharePoint lists. Stakeholders indicated that the changes made from the first iteration align more with their needs and requirements.Third iterationThe third iteration is the final iteration of the artefact. The third iteration has been refined according to feedback and requirements provided by stakeholders in the second prototyping meeting. The artefact consisted of the following features and functionalities:Mobile application:Timesheet managementProject DetailsDesktop application:Quote managementProject management Timesheet managementInventory managementCustomer managementFinal iteration administration application screenshotsFigure 20 Main MenuFigure 21 Quote Management ScreenFigure 22 Quote Info Input ScreenFigure 23 Quote Info View ScreenFigure 24 Project Management ScreenFigure 25 Project Info Input ScreenFigure 26 Project Info View ScreenFigure 27 Administration Timesheet Management ScreenFigure 28 Inventory Management ScreenFigure 29 Inventory Input ScreenFigure 30 Customer Manage ScreenFigure 31 Customer Input ScreenFinal iteration technician application screenshotsFigure 32 Technician Home ScreenFigure 33 Timesheet Management ScreenFigure 34 Timesheet Input ScreenFigure 35 Project Browse ScreenFigure 36 Project View ScreenReleaseThe fourth phase of the agile process consists of various quality assurance tests and training of Employees. The application code is checked to ensure that clean code is written, and potential bugs are addressed. Employees will be trained to utilise the solution to its full potential and any other issues will be addressed by the development team. In-person meetings were scheduled with the stakeholders of the Instrument Makers to provide training to the staff members of the Instrument Makers. During these training sessions, staff members and the development team performed and tested the various functionalities of the solution. The opportunity was given to staff members to ask questions relating to the utilisation of the solution.MaintenanceThe SDLC's maintenance phase begins once the product is fully operational. Software upgrades, corrections, and replacements are all examples of software maintenance.Upgrading or integrating software applications with newly deployed systems by the client is a common requirement. Additional testing of the software or version upgrades is frequently required. Errors or faults that surfaced during the maintenance phase might need to be fixed during subsequent software testing. During the maintenance phase, software performance monitoring is also provided.RetirementThe final phase of the Agile Development process is known as the Retirement phase. The retirement phase's main goal is to successfully take a system out of service. Today's enterprises must successfully complete this task without significantly disrupting their everyday organisational business demands. As legacy systems are rejected and new systems take their place, this is a severe problem that most organisations must deal with.Chapter  4Results In this chapter, the results and conclusion derived from the literature study and development of the artefact will be discussed in detail. The section will review the contribution of Agile software development, Prototyping, ISO 9241-210: Human-centred design for prototyping, Legacy System Analysis and Microsoft Power Platform.Agile software development methodologyThe utilisation of Agile as the software development methodology has proven to be successful in various stages of development and contributed significantly to the successful development of the solution. The utilisation of agile has led to the development of a solution of high quality that was refined during the numerous iterations of the solution. Agile enabled the development team to rapidly develop iterations which were showcased to stakeholders to ensure that the solution satisfy all their requirements and provided them with the ability to submit feedback. Feedback is crucial during development because it will provide insight into different aspects relating to stakeholders, their needs, and the requirements of the application.  Throughout the development project, communication with stakeholders took place continuously to ensure a higher level of customer satisfaction. Communication is one of the most important aspects of agile and contributes immensely to the success of a project.PrototypingPrototyping has contributed significantly to the successful development of the solution and allowed the development team to accurately assess the solution’s usability, accuracy, usefulness, performance and viability. Prototyping has led to the discovery of design flaws and bugs earlier on in the development cycle and provided the ability to identify improvements that can be made. Earlier detection of flaws and bugs can save time later in development. Prototyping formed part of the main feedback component in the development cycle. The various prototyping meetings provided stakeholders with the ability to test and critique the currently developed functions of the solution. As stated previously, feedback contributes significantly to the successful development of the artefact. Prototyping allowed for various verification and validation tests during development. The various processes, logic and business rules could be tested to ensure that the data being produced is valid and accurate.ISO 9241-210ISO standards provide various guidelines, frameworks and processes on different topics relating to application development, engineering, quality management standards and environmental management standards (ISO, 2022). The utilisation of ISO 9241-210 provided insight into the best ways of developing a user interface that is effective, efficient, constant, and adheres to the regulations set out by ISO. ISO 9241-210 contributed significantly to the successful development of the User Interface utilised within the solution.ISO standards are expensive to obtain and could severely impact the budget of a project. ISO standards consist of a large number of resources and will require a fully committed team to understand and correctly implement ISO standards within an organisation.Legacy system analysisThe legacy system analysis that was conducted, provided insight into the different functionalities of the application, identification of the data structure, various inputs in the application, identification of unsatisfied requirements and various other aspects. The legacy system analysis provided a better understanding of the goals that need to be achieved and enabled comprehension of the complicated structures. The legacy system analysis identified redundant columns and tables within the data structure which was utilised to implement improvements to the data structure. The system analysis provided the ability to identify potential risks and threats to the processes. As a result, the legacy system analysis led to increased productivity and higher customer satisfactionMicrosoft Power PlatformThe utilisation of Microsoft Power Platform to develop the solution proved to be advantageous in several ways. Microsoft Power Platform enabled the development team to develop the different iterations in a short amount of time. As a result, the development time was reduced, and the solution could easily be modified to better address stakeholder requirements. Microsoft Power Platform provides the ability to easily develop and test applications which led to the early discovery and solving of bugs and other issues raised by stakeholders.Some features need to be expanded upon in Microsoft Power Platform as complex applications might not work as intended or lack the correct functionality to implement the required features. Microsoft Power Platform should be utilised to develop medium-complexity applications.Chapter 5 Reflection and QuestionsWhat did you learn while completing this project?  Refer to the decisions that you took and evaluate them.  Analyse the strong and weak points of the product and the process that you followed.  What would you do differently?During the course of this study, various frameworks, methods and procedures were researched and implemented during the development of the artefact to determine which frameworks, methods and procedures can contribute to the successful re-engineering of an ERP system. I have learned that there are several ways in which a developer can attempt to re-engineer an application. The choice of frameworks, methods and procedures are largely influenced by the organisation for which the application is being developed, what type of application is being developed and what the requirements of the application are. The utilisation of the Agile software development methodology, prototyping, legacy system analysis, ISO standards, and Microsoft Power Platform during the development cycle proved to have a positive influence on the successful development of the solution. The solution utilised Microsoft SharePoint as its main data source which has proven to be less effective than Microsoft Dataverse would have been. Microsoft SharePoint has limited features compared to Microsoft Dataverse although Microsoft SharePoint is a free service and Microsoft Dataverse requires licensing. Microsoft Dataverse should have been utilised instead of Microsoft SharePoint.Did you achieve the objectives that you set for the project?  Discuss.The study successfully achieved the goals it set out to achieve along with a concrete answer to the research question. Feedback from the Instrument Makers and the various tests, which were conducted during development and prototyping, concluded that the application effectively and efficiently satisfies the needs and requirements specified by the stakeholders of the Instrument Makers. The goal of the artefact was to identify whether the researched methods can contribute to the successful re-engineering of an ERP system. Each individual method and process stated above can be utilised to contribute to the successful re-engineering of an ERP system.How successful were you in managing the project and meeting target dates?  Discuss.The utilisation of Microsoft Power Platform, in conjunction with Agile Software development and Prototyping, promoted faster development which led to the project being developed on schedule in relation to the established target dates and project plan. ReflectionThis research paper initiated with the submission of a research proposal in which the following information was provided:Project descriptionProblem description and background contextAims and objectivesProcedures and Methods that will be utilisedProject PlanDescriptions of development platform, resources and environments that will be usedEthical and legal implicationsProvisional Chapter divisionThe next part of the research is a literature study which consisted of research relating to the various methodologies, frameworks, and processes which can be utilised to successfully re-engineer an ERP system. The literature study focused on:User Interface design, feedback during development, prototyping, Approach to migrating legacy systems to web-based servicesISO standardsMicrosoft Power PlatformThe literature study aided in identifying methodologies, frameworks and processes which could be utilised during re-engineering and provided the necessary insight into how and why these methodologies, frameworks and processes are crucial during the re-engineering processes.The next phase consisted of utilising the information identified in the literature study to develop an artefact that will aid in answering the research question. The artefact consisted of different requirements provided by the Instrument Maker department and was developed in Microsoft Power Platform. During development, prototyping was utilised to showcase development progress and generate feedback from stakeholders to ensure the highest level of client satisfaction. The artefact went through various iterations during development in order to refine and test the various capabilities required to satisfy the requirements.The final phase consisted of demonstrating the final iteration of the artefact along with key aspects of the research conducted during this study to stakeholders from the university. During this time, stakeholders asked various questions relating to the research conducted, development of the artefact, and the artefact in general.Bibliography Abd Elmonem, M.A., Nasr, E.S. & Geith, M.H. 2016. Benefits and challenges of cloud erp systems – a systematic literature review. Future Computing and Informatics Journal, 1(1):1-9. https://www.sciencedirect.com/science/article/pii/S2314728816300599 Alan R. Hevner, S.T.M., Jinsoo Park, Sudha Ram. 2004. Design science in information systems research. MIS Quarterly, 28(1):30. Creswell, J. & Guetterman, T. 2018. Educational research: Planning, conducting, and evaluating quantitative and qualitative research. 6th. Daly, L. 2016, How feedback helps you develop better software: Insights from the jira mobile team [Blog post].  Date of access: 27 June 2022.Fong, J. 2021. Information systems reengineering, integration and normalization: Heterogeneous database connectivity. Springer Nature.Grimm, T. 1998. The human condition: A justification for rapid prototyping. Time Compression Technologies, 3, Date of access: 26 June 2022. Guba, E.G. & Lincoln, Y.S. 2005. Paradigmatic controversies, contradictions, and emerging confluences. In. The sage handbook of qualitative research, 3rd ed. Thousand Oaks, CA: Sage Publications Ltd. pp. 191-215. ISO. 2018. Ergonomics of human-system interaction. ISO.ISO. 2019. Ergonomics of human-system interaction. ISO.Keeves, J.P. 1997. Educational research, methodology and measurement : An international handbook. 2nd ed. New York, N.Y. : Pergamon.Kivunja, C. & Kuyini, A.B. 2017. Understanding and applying research paradigms in educational contexts. International Journal of Higher Education, 6(5), Kreisberg, S. 2020, Importance of customer feedback in software development [Blog post].  Date of access: 25 June 2022.Laboratories, P.R. 2021, Understanding the 5 stages of prototyping [Blog post].  Date of access: 25 June 2022.Mackenzie, N. & Knipe, S. 2006. Research dilemmas: Paradigms, methods and methodology. Issues in Educational Research, 16:193-205. Management, P.P. 2021, Top 10 benefits of microsoft power platform [Blog post].  Date of access: 27 June 2022.Martin, M. 2022, Prototyping model in software engineering: Methodology, process, approach [Blog post].  Date of access: 27 June 2022.Microsoft. Microsoft power platform.  Date of access: 27 June 2022.Paracha, Z. 2021, What is the power platform [Blog post].  Date of access: 27 June 2022.Statistics, U.K. 2022. Ethics in statistics and research.  Date of access: 27 April 2022.Stone, D.L. 2005. User interface design and evaluation.  (The morgan kaufmann series in interactive technologies).Valverde, R., Talla, M. & Global, I.G.I. 2012. Information systems reengineering for modern business systems: Erp, supply chain and e-commerce management solutions. Oracle. 2019. What is an ERP system.  https://www.oracle.com/in/erp/what-is-erp/ Date of access: 10 October 2022.Kissflow. 2021. The 9 Key Benefits of Using the Agile Methodology. https://kissflow.com/project/agile/benefits-of-agile/ Date of access: 10 October 2022.Wrike. 2022. The Agile Software Development Life Cycle. https://www.wrike.com/agile-guide/agile-development-life-cycle/ Date of access: 10 October 2022.Study. 2022. Maintenance Phase in SDLC. https://study.com/academy/lesson/maintenance-phase-in-sdlc.html Date of access: 10 October 2022.Appendix AITRI 671 Research ethics form: Honours project Name: Hanno Visagie Title of project: Re-engineering an enterprise resource planning system: Methodologies, frameworks and processes. Supervisor: Mrs S.E.S Campher Starting and end dates of project:  24 Feb. – 30 Oct.Describe how you plan to provide information about yourself and the goals of your research to participants. The participants in this study are located within the university campus. In person meetings will be continuously held throughout the development cycle in order to obtain feedback. As a result of in person meetings, stakeholders will be given the opportunity to directly interact with the researchers to establish a professional relationship and communication channel.        Describe what methods you will use to get permission from participants in your study. N/A             I declare that the information contained in this form is accurate. I have attempted to identify the risks that may arise in conducting this research and acknowledge my obligations and the rights of the participants. I confirm that the research will be conducted in line with all University, legal and ethical standards.    Name of student: Hanno Visagie Signature: Date:2022/08/25   Name of study leader: Mrs S.E.S Campher Signature: Date:
